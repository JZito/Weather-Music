// sandbox
var ranNotes = [12,11,9,7,5,4,2,0,-1], noteLog = [ ],
beets = [1, 1/1.5, 1/2, 1/2, 1/3, 1/3,1/6, 1/4, 1/4, 1/4,1/8, 1/8,1/8,1/16, 1/16, 1/32],
bR, nR, bR2, nR2, sunny = true, bw, columns, space, randomCount = 4, stopper, 
tracks = [], syns = [], busses = [], currentSeqs = [], effector, fols= [],
day = true, cloudy = false, rainy = false,
effectsTypes = [], effectsProperties = [];
  xOffsets = [0, 0, 0, 0];
  hues = [20, 50, 70, 194 / 255];
  fillValue = 20;
  visualizer = false;
  wildSolo = false;
  Samples = {};
  Samples.a1 = [0.16, 0.55, 0.13, 0.44, 0.03, 0.31, 0.13, 0.25, 0.11, 0.75, 0.09, 0.88, 0.08, 0.56, 0.19, 0.33, 0.09, 0.44, 0.31, 0.23, 0.19, 0.38, 0.16, 0.5, 0.06, 0.44, 0.28, 0.11, 0.05, 0.56, 0.55, 0.63, 0.16, 0.33, 0.11, 0.25, 0.13, 0.23, 0.28, 0.77, 0.09, 0.88, 0.03, 0.28, 0.06, 0.44, 0.09, 0.75, 0.08, 0.63, 0.25, 0.38, 0.05, 0.11, 0.03, 0.09, 0.02, 0.44, 0.19, 0.55, 0.09, 0.5, 0.16, 0.56, 0.13, 0.44, 0.14, 0.77, 0.05, 0.28, 0.06, 0.06, 0.03, 0.13, 0.08, 0.75, 0.08, 0.23, 0.19, 0.47, 0.33, 0.55, 0.19, 0.77, 0.16, 0.55, 0.11, 0.25, 0.09, 0.11, 0.16, 0.44, 0.08, 0.66, 0.13, 0.39, 0.28, 0.28, 0.25, 0.5, 0.09, 0.38, 0.03, 0.63, 0.05, 0.44, 0.06, 0.38, 0.02, 0.5, 0.14, 0.47, 0.31, 0.75, 0.38, 0.33, 0.06, 0.38, 0.09, 0.88, 0.16, 0.33, 0.11, 0.25, 0.13, 0.23, 0.28, 0.77, 0.09, 0.88, 0.03, 0.28, 0.06, 0.44, 0.09, 0.75, 0.08, 0.63, 0.25, 0.38, 0.05, 0.11, 0.03, 0.09, 0.02, 0.44, 0.19, 0.55, 0.09, 0.5, 0.16, 0.56, 0.13, 0.44, 0.14, 0.77, 0.05, 0.28, 0.06, 0.06, 0.03, 0.13, 0.08, 0.75, 0.08, 0.23, 0.19, 0.47, 0.33, 0.55, 0.19, 0.77, 0.16, 0.33, 0.13, 0.44, 0.03, 0.31, 0.13, 0.38, 0.31, 0.47, 0.25, 0.88, 0.11, 0.25, 0.5, 0.66, 0.09, 0.88, 0.06, 0.88, 0.05, 0.5, 0.08, 0.63, 0.19, 0.55, 0.28, 0.44, 0.13, 0.28, 0.09, 0.75, 0.05, 0.38, 0.25, 0.38, 0.19, 0.5, 0.13, 1, 0.33, 0.33, 0.03, 0.56, 0.16, 0.66, 0.31, 0.55, 0.06, 0.23, 0.06, 0.19, 0.13, 0.11, 0.19, 0.25, 0.08, 0.19, 0.38, 0.63, 0.06, 0.19, 0.22, 0.38, 0.39, 0.13, 0.44, 0.77, 0.55, 0.55, 0.33, 0.23, 0.47, 0.88, 0.03, 0.25, 0.19, 0.25, 0.09, 0.11, 0.09, 0.33, 0.38, 0.23, 0.19, 0.31, 0.09, 0.23, 0.09, 0.16, 0.31, 0.77, 0.19, 0.14, 0.47, 0.03, 0.13, 0.11, 0.39, 0.33, 0.55, 0.09, 0.22, 0.05, 0.23, 0.5, 0.06, 0.33, 0.16, 0.28, 0.16, 0.38, 0.19, 0.05, 0.39, 0.09, 0.08, 0.38, 0.22, 0.47, 0.13, 0.16, 0.08, 0.08, 0.63, 0.05, 0.16, 0.55, 0.11, 0.25, 0.09, 0.88, 0.13, 0.39, 0.08, 0.56, 0.09, 0.44, 0.19, 0.5, 0.03, 0.31, 0.14, 0.38, 0.05, 0.75, 0.28, 0.28, 0.09, 0.13, 0.14, 0.08, 0.02, 0.33, 0.13, 0.55, 0.05, 0.31, 0.23, 0.63, 0.06, 0.16, 0.55, 0.11, 0.25, 0.09, 0.11, 0.16, 0.88, 0.13, 0.39, 0.08, 0.75, 0.31, 0.56, 0.28, 0.28, 0.06, 0.31, 0.03, 0.63, 0.14, 0.44, 0.31, 0.5, 0.39, 0.55, 0.25, 0.33, 0.06, 0.23, 0.03, 0.38, 0.09, 0.16, 0.55, 0.11, 0.25, 0.09, 0.11, 0.16, 0.88, 0.08, 0.75, 0.09, 0.22, 0.06, 0.63, 0.09, 0.44, 0.31, 0.56, 0.28, 0.28, 0.08, 0.33, 0.13, 0.55, 0.39, 0.5, 0.22, 0.5, 0.05, 0.38, 0.06, 0.31, 0.08, 0.28, 0.09, 0.13, 0.03, 0.38, 0.31, 0.38, 0.13, 0.33, 0.28, 0.44, 0.39, 0.47, 0.28, 0.44, 0.39, 0.16, 0.55, 0.11, 0.25, 0.09, 0.11, 0.16, 0.44, 0.08, 0.38, 0.25, 0.88, 0.13, 0.5, 0.03, 0.75, 0.09, 0.88, 0.19, 0.55, 0.38, 0.63, 0.28, 1, 0.06, 0.56, 0.44, 0.25, 0.13, 0.5, 0.25, 0.66, 0.28, 0.38, 0.09, 0.63, 0.05, 0.16, 0.33, 0.11, 0.25, 0.13, 0.23, 0.28, 0.88, 0.03, 0.44, 0.05, 0.38, 0.06, 0.11, 0.08, 0.22, 0.25, 0.44, 0.13, 0.5, 0.05, 0.55, 0.55, 0.77, 0.14, 0.75, 0.31, 0.63, 0.09, 0.08, 0.16, 0.13, 0.31, 0.23, 0.39, 0.55, 0.28, 0.44, 0.19, 0.13, 0.88, 0.09, 0.77, 0.03, 0.44, 0.11, 0.75, 0.06, 0.31, 0.09, 0.63, 0.16, 0.11, 0.31, 0.22, 0.19, 0.56, 0.25, 0.44, 0.05, 0.38, 0.09, 0.75, 0.02, 0.25, 0.08, 0.33, 0.25, 0.5, 0.23, 0.22, 0.22, 0.44, 0.09, 0.23, 0.38, 0.09, 0.13, 0.28, 0.16, 0.47, 0.09, 0.13, 0.28, 0.16, 0.14, 0.25, 0.11, 0.16, 0.31, 0.38, 0.13, 0.38, 0.08, 0.77, 0.31, 0.47, 0.25, 0.09, 0.03, 0.75, 0.39, 0.25, 0.47, 0.88, 0.22, 0.66, 0.38, 0.88, 0.5, 0.66, 0.28, 0.5, 0.09, 0.75, 0.03, 0.13, 0.88, 0.09, 0.77, 0.03, 0.44, 0.05, 0.75, 0.16, 0.63, 0.02, 0.33, 0.25, 0.38, 0.11, 0.25, 0.09, 0.56, 0.09, 0.77, 0.22, 0.75, 0.09, 0.33, 0.03, 0.25, 0.16, 0.55, 0.11, 0.88, 0.08, 0.63, 0.13, 0.23, 0.16, 0.28, 0.23, 0.44, 0.19, 0.55, 0.14, 0.47, 0.05, 0.38, 0.06, 0.5, 0.02, 0.75, 0.09, 0.11, 0.06, 0.38, 0.09, 0.13, 0.09, 0.33, 0.11, 0.77, 0.13, 0.23, 0.28, 0.25, 0.25, 0.75, 0.16, 0.44, 0.09, 0.66, 0.31, 0.38, 0.08, 0.88, 0.03, 0.63, 0.09, 0.28, 0.16, 0.47, 0.06, 0.55, 0.23, 0.25, 0.19, 0.75, 0.09, 0.5, 0.05, 0.13, 0.02, 0.55, 0.31, 0.38, 0.19, 0.47, 0.06, 0.47, 0.14, 0.25, 0.19, 0.75, 0.16, 0.11, 0.08, 0.38, 0.09, 0.66, 0.19, 0.66, 0.11, 0.77, 0.05, 0.63, 0.09, 0.88, 0.13, 0.39, 0.14, 0.66, 0.23, 0.47, 0.14, 0.66, 0.38, 0.66, 0.16, 0.5, 0.23, 0.38, 0.22, 0.88, 0.08, 0.44, 0.05, 0.66, 0.23, 0.47, 0.25, 0.25, 0.06, 0.88, 0.05, 0.11, 0.38, 0.19, 0.19, 0.88, 0.09, 0.44, 0.19, 0.47, 0.38, 0.22, 0.13, 0.38, 0.19, 0.09, 0.09, 0.33, 0.11, 0.77, 0.13, 0.23, 0.28, 0.25, 0.16, 0.88, 0.03, 0.28, 0.06, 0.44, 0.05, 0.75, 0.02, 0.63, 0.25, 0.56, 0.23, 0.66, 0.55, 0.55, 0.38, 0.44, 0.13, 0.56, 0.09, 0.5, 0.23, 0.5, 0.05, 0.47, 0.08, 0.38, 0.06, 0.13, 0.09, 0.5, 0.06, 0.77, 0.38, 0.31, 0.19, 0.39, 0.33, 0.75, 0.28, 0.47, 0.06, 0.38, 0.06, 0.33, 0.25, 0.75, 0.11, 0.19, 0.25, 0.33, 0.11, 0.11, 0.33, 0.22, 0.77, 0.09, 0.75, 0.08, 0.25, 0.13, 0.55, 0.16, 0.88, 0.09, 0.44, 0.09, 0.47, 0.03, 0.63, 0.06, 0.88, 0.03, 0.38, 0.05, 0.5, 0.02, 0.22, 0.19, 0.47, 0.25, 0.28, 0.13, 0.19, 0.14, 0.66, 0.25, 0.44, 0.16, 0.88, 0.31, 0.56, 0.13, 0.44, 0.11, 0.38, 0.25, 0.44, 0.06, 0.38, 0.25, 0.55, 0.28, 0.25, 0.09, 0.33, 0.08, 0.5, 0.09, 0.75, 0.03, 0.63, 0.03, 0.77, 0.19, 0.88, 0.22, 0.63, 0.33, 0.13, 0.88, 0.11, 0.77, 0.05, 0.75, 0.09, 0.63, 0.16, 0.44, 0.25, 0.25, 0.09, 0.22, 0.08, 0.38, 0.38, 0.55, 0.03, 0.11, 0.03, 0.56, 0.05, 0.66, 0.16, 0.75, 0.28, 0.44, 0.08, 0.13, 0.88, 0.09, 0.77, 0.03, 0.44, 0.05, 0.75, 0.11, 0.63, 0.02, 0.31, 0.16, 0.33, 0.09, 0.23, 0.23, 0.25, 0.08, 0.44, 0.19, 0.19, 0.06, 0.38, 0.38, 0.88, 0.09, 0.16, 0.33, 0.11, 0.44, 0.13, 0.23, 0.28, 0.88, 0.03, 0.55, 0.09, 0.75, 0.19, 0.63, 0.08, 0.25, 0.19, 0.09, 0.06, 0.38, 0.31, 0.56, 0.14, 0.31, 0.28, 0.66, 0.39, 0.55, 0.05, 0.23, 0.03, 0.16, 0.77, 0.13, 0.75, 0.09, 0.33, 0.11, 0.44, 0.25, 0.88, 0.03, 0.63, 0.09, 0.55, 0.31, 0.38, 0.05, 0.88, 0.55, 0.5, 0.06, 0.66, 0.5, 0.25, 0.08, 0.13, 0.16, 0.55, 0.11, 0.25, 0.09, 0.11, 0.16, 0.88, 0.13, 0.39, 0.08, 0.75, 0.09, 0.22, 0.31, 0.28, 0.08, 0.16, 0.28, 0.63, 0.03, 0.38, 0.25, 0.75, 0.05, 0.55, 0.39, 0.5, 0.55, 0.63, 0.56, 0.47, 0.77, 0.13, 0.06, 0.47, 0.09, 0.09, 0.77, 0.03, 0.33, 0.11, 0.75, 0.22, 0.25, 0.09, 0.55, 0.08, 0.88, 0.16, 0.63, 0.13, 0.44, 0.25, 0.38, 0.16, 0.77, 0.13, 0.75, 0.09, 0.44, 0.22, 0.88, 0.09, 0.63, 0.11, 0.25, 0.08, 0.55, 0.19, 0.38, 0.33, 0.38, 0.44, 0.56, 0.31, 0.28, 0.25, 0.77, 0.28, 0.39, 0.03, 0.44, 0.13, 0.55, 0.06, 0.75, 0.22, 0.44, 0.09, 0.33, 0.14, 0.5, 0.11, 0.13, 0.16, 0.38, 0.05, 0.13, 0.19, 0.75, 0.14, 0.5, 0.06, 0.31, 0.28, 0.63, 0.19, 0.88, 0.19, 0.23, 0.13, 0.23, 0.14, 0.16, 0.55, 0.11, 0.25, 0.09, 0.88, 0.13, 0.77, 0.22, 0.75, 0.09, 0.63, 0.08, 0.44, 0.03, 0.11, 0.31, 0.56, 0.13, 0.38, 0.09, 0.75, 0.28, 0.88, 0.55, 0.22, 0.31, 0.33, 0.22, 0.5, 0.31, 0.13, 0.03, 0.47, 0.19, 0.38, 0.19, 0.33, 0.25, 0.31, 0.19, 0.47, 0.22, 0.44, 0.05, 0.63, 0.14, 0.28, 0.06, 0.31, 0.16, 0.5, 0.05, 0.25, 0.08, 0.77, 0.16, 0.75, 0.09, 0.33, 0.03, 0.77, 0.22, 0.75, 0.09, 0.25, 0.11, 0.55, 0.08, 0.88, 0.16, 0.63, 0.13, 0.23, 0.28, 0.28, 0.23, 0.44, 0.19, 0.55, 0.14, 0.47, 0.16, 0.33, 0.11, 0.55, 0.13, 0.23, 0.28, 0.11, 0.03, 0.5, 0.09, 0.88, 0.08, 0.25, 0.05, 0.75, 0.14, 0.63, 0.25, 0.44, 0.06, 0.13, 0.16, 0.47, 0.19, 0.25, 0.06, 0.16, 0.55, 0.13, 0.44, 0.03, 0.88, 0.31, 0.56, 0.13, 0.22, 0.05, 0.5, 0.25, 0.33, 0.09, 0.23, 0.14, 0.75, 0.55, 0.13, 0.06, 0.88, 0.11, 0.38, 0.09, 0.25, 0.08, 0.13, 0.16, 0.33, 0.11, 0.25, 0.13, 0.23, 0.28, 0.55, 0.03, 0.44, 0.09, 0.5, 0.25, 0.33, 0.05, 0.28, 0.06, 0.11, 0.38, 0.38, 0.25, 0.09, 0.19, 0.38, 0.08, 0.88, 0.06, 0.56, 0.13, 0.13, 0.16, 0.63, 0.19, 0.09, 0.06, 0.25, 0.44, 0.22, 0.38, 0.77, 0.09, 0.75, 0.05, 0.38, 0.14, 1, 0.09, 0.23, 0.14, 0.39, 0.06, 0.75, 0.03, 0.5, 0.03, 0.13, 0.06, 0.13, 0.31, 0.14, 0.22, 0.88, 0.06, 0.13, 0.06, 0.38, 0.19, 0.16, 0.77, 0.13, 0.75, 0.09, 0.44, 0.11, 0.88, 0.03, 0.63, 0.09, 0.25, 0.08, 0.55, 0.25, 0.28, 0.28, 0.38, 0.06, 0.16, 0.55, 0.11, 0.25, 0.09, 0.11, 0.16, 0.88, 0.08, 0.75, 0.09, 0.22, 0.06, 0.44, 0.09, 0.63, 0.25, 0.28, 0.09, 0.33, 0.13, 0.23, 0.14, 0.38, 0.03, 0.08, 0.25, 0.28, 0.09, 0.09, 0.13, 0.22, 0.03, 0.13, 0.06, 0.38, 0.05, 0.77, 0.13, 0.75, 0.06, 0.56, 0.09, 0.63, 0.19, 0.08, 0.05, 0.5, 0.75, 0.19, 0.33, 0.09, 0.03, 0.13, 0.08, 0.63, 0.02, 0.33, 0.13, 0.13, 0.88, 0.09, 0.33, 0.25, 0.77, 0.03, 0.44, 0.16, 0.75, 0.11, 0.22, 0.19, 0.63, 0.16, 0.11, 0.09, 0.09, 0.14, 0.25, 0.08, 0.56, 0.02, 0.09, 0.16, 0.16, 0.55, 0.11, 0.25, 0.09, 0.11, 0.16, 0.88, 0.08, 0.75, 0.06, 0.44, 0.13, 0.56, 0.03, 0.63, 0.13, 0.55, 0.05, 0.75, 0.13, 0.28, 0.03, 0.22, 0.25, 0.77, 0.28, 0.56, 0.06, 0.44, 0.19, 0.66, 0.38, 0.56, 0.13, 0.5, 0.19, 0.25, 0.25, 0.28, 0.09, 0.38, 0.33, 0.19, 0.19, 0.33, 0.06, 0.63, 0.02, 0.75, 0.09, 0.13, 0.19, 0.55, 0.14, 0.23, 0.44, 0.75, 0.47, 0.66, 0.38, 0.75, 0.13, 0.88, 0.09, 0.55, 0.03, 0.75, 0.16, 0.22, 0.09, 0.38, 0.11, 0.63, 0.08, 0.13, 0.06, 0.44, 0.06, 0.25, 0.23, 0.47, 0.02, 0.22, 0.05, 0.88, 0.55, 0.38, 0.28, 0.77, 0.19, 0.44, 0.5, 0.56, 0.09, 0.5, 0.19, 0.39, 0.13, 0.25, 0.09, 0.28, 0.25, 0.44, 0.19, 0.63, 0.19, 0.13, 0.03, 0.38, 0.25, 0.47, 0.09, 0.56, 0.05, 0.38, 0.11, 0.75, 0.06, 0.47, 0.14, 0.23, 0.25, 0.47, 0.09, 0.25, 0.31, 0.75, 0.13, 0.13, 0.03, 0.63, 0.19, 0.06, 0.09, 0.56, 0.23, 0.47, 0.16, 0.13, 0.09, 0.88, 0.11, 0.75, 0.19, 0.39, 0.14, 0.66, 0.09, 0.11, 0.03, 0.55, 0.16, 0.33, 0.11, 0.55, 0.13, 0.23, 0.28, 0.25, 0.03, 0.5, 0.05, 0.11, 0.09, 0.88, 0.08, 0.28, 0.25, 0.75, 0.06, 0.39, 0.25, 0.23, 0.16, 0.44, 0.19, 0.63, 0.02, 0.22, 0.31, 0.38, 0.19, 0.88, 0.23, 0.33, 0.39, 0.19, 0.09, 0.16, 0.14, 0.13, 0.09, 0.13, 0.31, 0.56, 0.23, 0.38, 0.08, 0.75, 0.09, 0.88, 0.19, 0.75, 0.11, 0.25, 0.22, 0.11, 0.06, 0.09, 0.06, 0.44, 0.08, 0.08, 0.39, 0.28, 0.09, 0.63, 0.19, 0.06, 0.14, 0.22, 0.31, 0.63, 0.38, 0.13, 0.03, 0.44, 0.23, 0.06, 0.13, 0.19, 0.16, 0.55, 0.38, 0.09, 0.88, 0.22, 0.77, 0.09, 0.75, 0.03, 0.63, 0.13, 0.33, 0.16, 0.44, 0.11, 0.55, 0.08, 0.25, 0.25, 0.75, 0.05, 0.5, 0.25, 0.28, 0.03, 0.22, 0.16, 0.56, 0.05, 0.66, 0.31, 0.38, 0.14, 0.63, 0.06, 0.47, 0.22, 0.75, 0.02, 0.13, 0.31, 0.55, 0.16, 0.33, 0.11, 0.44, 0.13, 0.23, 0.28, 0.88, 0.03, 0.55, 0.05, 0.11, 0.19, 0.5, 0.06, 0.22, 0.09, 0.38, 0.08, 0.25, 0.03, 0.75, 0.02, 0.44, 0.25, 0.38, 0.09, 0.55, 0.31, 0.63, 0.23, 0.33, 0.11, 0.22, 0.28, 0.77, 0.38, 0.88, 0.38, 0.13, 0.47, 0.66, 0.5, 0.23, 0.09, 0.75, 0.14, 0.56, 0.19, 0.38, 0.55, 0.31, 0.23, 0.77, 0.11, 0.63, 0.09, 0.5, 0.19, 0.47, 0.23, 0.55, 0.31, 0.47, 0.23, 0.75, 0.38, 0.77, 0.08, 0.47, 0.14, 0.55, 0.25, 0.39, 0.11, 0.38, 0.23, 0.75, 0.75, 0.63, 0.23, 0.33, 0.08, 0.13, 0.06, 0.09, 0.09, 0.75, 0.23, 0.03, 0.31, 0.55, 0.39, 0.05, 0.13, 0.88, 0.16, 0.63, 0.13, 0.09, 0.22, 0.38, 0.16, 0.55, 0.22, 0.75, 0.16, 0.55, 0.11, 0.25, 0.09, 0.11, 0.16, 0.88, 0.08, 0.75, 0.06, 0.44, 0.13, 0.56, 0.03, 0.63, 0.13, 0.66, 0.28, 0.44, 0.5, 0.38, 0.31, 0.5, 0.06, 0.88, 0.25, 0.75, 0.05, 0.77, 0.47, 0.23, 0.44, 0.88, 0.11, 0.13, 0.22, 0.55, 0.19, 0.39, 0.23, 0.88, 0.38, 0.47, 0.31, 0.63, 0.47, 0.23, 0.02, 0.75, 0.13, 0.44, 0.09, 0.38, 0.08, 0.66, 0.16, 0.88, 0.31, 0.56, 0.03, 0.55, 0.11, 0.44, 0.13, 0.38, 0.28, 0.31, 0.06, 0.25, 0.05, 0.75, 0.09, 0.44, 0.38, 0.55, 0.06, 0.38, 0.08, 0.44, 0.19, 0.63, 0.39, 0.5, 0.02, 0.77, 0.16, 0.13, 0.08, 0.5, 0.19, 0.75, 0.09, 0.22, 0.23, 0.88, 0.25, 0.5, 0.33, 0.56, 0.08, 0.5, 0.25, 0.31, 0.38, 0.28, 0.33, 0.44, 0.14, 0.31, 0.16, 1, 0.09, 0.77, 0.5, 0.66, 0.19, 0.88, 0.88, 0.22, 0.38, 0.75, 0.19, 0.55, 0.31, 0.88, 0.13, 0.88, 0.31, 0.88, 0.13, 0.88, 0.13, 0.88, 0.09, 0.77, 0.03, 0.75, 0.16, 0.44, 0.09, 0.63, 0.11, 0.55, 0.05, 0.25, 0.25, 0.28, 0.28, 0.33, 0.22, 0.56, 0.44, 0.38, 0.13, 0.11, 0.03, 0.13, 0.16, 0.38, 0.06, 0.22, 0.02, 0.88, 0.08, 0.66, 0.55, 0.63, 0.44, 0.56, 0.13, 0.55, 0.28, 0.5, 0.55, 0.75, 0.16, 0.77, 0.03, 0.63, 0.23, 0.75, 0.13, 0.88, 0.19, 0.55, 0.11, 0.38, 0.44, 0.25, 0.38, 0.56, 0.33, 0.66, 0.09, 0.55, 0.38, 0.11, 0.88, 0.09, 0.77, 0.22, 0.75, 0.09, 0.63, 0.08, 0.33, 0.03, 0.44, 0.13, 0.25, 0.19, 0.56, 0.05, 0.31, 0.06, 0.5, 0.06, 0.22, 0.13, 0.38, 0.75, 0.88, 0.05, 0.13, 0.28, 0.28, 0.38, 0.66, 0.39, 0.22, 0.11, 0.55, 0.03, 0.75, 0.19, 0.23, 0.19, 0.44, 0.06, 0.28, 0.08, 0.11, 0.09, 0.5, 0.02, 0.38, 0.03, 0.19, 0.13, 0.88, 0.5, 0.66, 0.06, 0.55, 0.05, 0.47, 0.13, 0.16, 0.55, 0.11, 0.25, 0.09, 0.11, 0.16, 0.88, 0.08, 0.75, 0.06, 0.44, 0.13, 0.56, 0.03, 0.63, 0.13, 0.66, 0.28, 0.44, 0.06, 0.75, 0.28, 0.88, 0.19, 0.39, 0.09, 0.22, 0.19, 0.55, 0.5, 0.38, 0.23, 0.23, 0.47, 0.5, 0.38, 0.38, 0.25, 1, 0.05, 0.47, 0.02, 0.75, 0.11, 0.44, 0.09, 0.88, 0.05, 0.88, 0.23, 0.13, 0.25, 0.63, 0.33, 0.39, 0.13, 0.28, 0.19, 0.55, 0.44, 0.5, 0.06, 0.23, 0.16, 0.19, 0.09, 0.33, 0.13, 0.09, 0.5, 0.66, 0.13, 0.55, 0.03, 0.38, 0.05, 0.16, 0.05, 0.25, 0.03, 0.28, 0.05, 0.44, 0.31, 0.56, 0.19, 0.19, 0.23, 0.33, 0.44, 0.28, 0.22, 0.33, 0.31, 0.44, 0.33, 0.75, 0.66, 0.5, 0.38, 0.33, 0.31, 0.63, 0.23, 0.66, 0.39, 0.28, 0.47, 0.31, 0.09, 0.44, 0.38, 0.16, 0.33, 0.11, 0.25, 0.03, 0.88, 0.13, 0.23, 0.28, 0.55, 0.25, 0.75, 0.03, 0.13, 0.16, 0.44, 0.31, 0.56, 0.14, 0.47, 0.09, 0.5, 0.06, 0.55, 0.19, 0.38, 0.09, 0.63, 0.05, 0.38, 0.08, 0.31, 0.14, 0.28, 0.16, 0.66, 0.02, 0.25, 0.23, 0.25, 0.38, 0.11, 0.06, 1, 0.19, 0.5, 0.25, 0.63, 0.09, 0.09, 0.13, 0.08, 0.16, 0.38, 0.38, 0.5, 0.55, 0.13, 0.33, 0.11, 0.22, 0.19, 0.09, 0.47, 0.19, 0.19, 0.63, 0.09, 0.06, 0.66, 0.25, 0.19, 0.38, 0.44, 0.11, 0.06, 0.23, 0.11, 0.08, 0.13, 0.25, 0.19, 0.31, 0.77, 0.44, 0.19, 0.38, 0.09, 0.38, 0.16, 0.33, 0.88, 0.5, 0.22, 0.56, 0.33, 0.66, 0.38, 0.88, 0.31, 0.38, 0.22, 0.25, 0.31, 0.38, 0.47, 0.25, 0.31, 0.38, 0.47, 0.13, 0.88, 0.09, 0.55, 0.03, 0.75, 0.16, 0.63, 0.09, 0.33, 0.11, 0.44, 0.08, 0.25, 0.19, 0.47, 0.25, 0.13, 0.06, 0.38, 0.19, 0.5, 0.25, 0.44, 0.06, 0.75, 0.05, 0.5, 0.02, 0.13, 0.09, 0.56, 0.14, 0.16, 0.33, 0.11, 0.55, 0.13, 0.23, 0.28, 0.25, 0.03, 0.5, 0.05, 0.11, 0.09, 0.88, 0.08, 0.28, 0.25, 0.75, 0.06, 0.44, 0.19, 0.39, 0.25, 0.23, 0.16, 0.63, 0.31, 0.38, 0.19, 0.88, 0.23, 0.33, 0.39, 0.19, 0.09, 0.22, 0.23, 0.38, 0.31, 0.77, 0.02, 0.75, 0.06, 0.19, 0.09, 0.22, 0.06, 0.09, 0.14, 0.88, 0.06, 0.56, 0.09, 0.13, 0.11, 0.38, 0.25, 0.25, 0.03, 0.47, 0.38, 0.63, 0.23, 0.28, 0.09, 0.38, 0.25, 0.16, 0.05, 0.08, 0.38, 0.16, 0.33, 0.11, 0.25, 0.13, 0.23, 0.28, 0.88, 0.03, 0.55, 0.25, 0.75, 0.03, 0.13, 0.16, 0.44, 0.31, 0.56, 0.05, 0.63, 0.09, 0.88, 0.03, 0.44, 0.19, 0.56, 0.22, 0.77, 0.09, 0.31, 0.06, 0.75, 0.02, 0.25, 0.06, 0.13, 0.14, 0.33, 0.11, 0.63, 0.08, 0.5, 0.05, 0.77, 0.03, 0.44, 0.09, 0.38, 0.14, 0.75, 0.13, 0.44, 0.39, 0.38, 0.22, 0.56, 0.09, 0.63, 0.03, 0.55, 0.06, 0.88, 0.28, 0.66, 0.19, 0.88, 0.11, 0.66, 0.22, 0.56, 0.38, 0.75, 0.25, 0.77, 0.5, 0.56, 0.03, 0.25, 0.33, 0.47, 0.28, 0.55, 0.13, 0.56, 0.75, 0.55, 0.44, 0.88, 0.38, 0.77, 1, 0.11, 0.06, 0.56, 0.13, 0.33, 0.88, 0.88, 0.16, 0.77, 0.19, 0.39, 0.19, 0.44, 0.28, 0.88, 0.16, 0.77, 0.03, 0.88, 0.19, 0.56, 0.19, 0.44, 0.13, 0.88, 0.09, 0.55, 0.03, 0.75, 0.06, 0.33, 0.25, 0.63, 0.05, 0.25, 0.03, 0.13, 0.09, 0.56, 0.14, 0.09, 0.02, 0.44, 0.06, 0.23, 0.19, 0.47, 0.16, 0.5, 0.16, 0.88, 0.31, 0.56, 0.13, 0.44, 0.11, 0.38, 0.09, 0.55, 0.09, 0.31, 0.39, 0.33, 0.08, 0.75, 0.03, 0.63, 0.06, 0.25, 0.05, 0.38, 0.19, 0.19, 0.25, 0.44, 0.16, 0.55, 0.02, 0.38, 0.22, 0.88, 0.28, 0.22, 0.14, 0.13, 0.23, 0.11, 0.19, 0.5, 0.11, 0.55, 0.09, 0.75, 0.22, 0.28, 0.19, 0.38, 0.06, 0.11, 0.44, 0.75, 0.38, 0.56, 0.09, 0.44, 0.05, 0.16, 0.28, 0.25, 0.09, 0.11, 0.09, 0.38, 0.09, 0.66, 0.06, 0.77, 0.14, 0.5, 0.23, 0.25, 0.19, 0.66, 0.03, 0.28, 0.19, 0.88, 0.13, 0.77, 0.38, 0.13, 0.16, 0.55, 0.11, 0.25, 0.09, 0.11, 0.16, 0.88, 0.08, 0.75, 0.06, 0.44, 0.03, 0.38, 0.25, 0.44, 0.22, 0.63, 0.28, 0.56, 0.39, 0.31, 0.13, 0.5, 0.09, 0.88, 0.11, 0.11, 0.44, 0.22, 0.38, 0.09, 0.33, 0.06, 0.55, 0.05, 0.25, 0.08, 0.11, 0.03, 0.88, 0.13, 0.75, 0.03, 0.63, 0.06, 0.5, 0.02, 0.56, 0.16, 0.55, 0.31, 0.56, 0.11, 0.63, 0.25, 0.44, 0.13, 0.66, 0.39, 0.55, 0.19, 0.28, 0.25, 0.19, 0.06, 0.56, 0.08, 0.13, 0.09, 0.08, 0.05, 0.23, 0.16, 0.14, 0.09, 0.44, 0.23, 0.16, 0.06, 0.19, 0.23, 0.22, 0.05, 0.33, 0.22, 0.16, 0.08, 0.14, 0.47, 0.75, 0.38, 0.63, 0.44, 0.03, 0.13, 0.31, 0.38, 0.13, 0.13, 0.88, 0.28, 0.03, 0.13, 0.56, 0.38, 0.06, 0.09, 0.09, 0.16, 0.88, 0.31, 0.56, 0.13, 0.44, 0.11, 0.38, 0.09, 0.55, 0.08, 0.75, 0.09, 0.31, 0.39, 0.33, 0.03, 0.63, 0.05, 0.25, 0.25, 0.47, 0.14, 0.44, 0.16, 0.19, 0.16, 0.55, 0.13, 0.44, 0.03, 0.75, 0.31, 0.33, 0.03, 0.13, 0.06, 0.5, 0.11, 0.88, 0.05, 0.38, 0.09, 0.25, 0.08, 0.22, 0.09, 0.88, 0.16, 0.28, 0.28, 0.23, 0.19, 0.44, 0.19, 0.33, 0.05, 0.28, 0.13, 0.08, 0.22, 0.19, 0.09, 0.13, 0.05, 0.25, 0.13, 0.44, 0.09, 0.33, 0.11, 0.88, 0.19, 0.28, 0.03, 0.25, 0.05, 0.55, 0.16, 0.75, 0.25, 0.63, 0.09, 0.38, 0.08, 0.13, 0.02, 0.5, 0.06, 0.75, 0.09, 0.16, 0.33, 0.11, 0.44, 0.09, 0.25, 0.09, 0.88, 0.13, 0.55, 0.03, 0.75, 0.13, 0.63, 0.09, 0.11, 0.16, 0.22, 0.08, 0.75, 0.25, 0.55, 0.28, 0.13, 0.06, 0.38, 0.06, 0.25, 0.05, 0.88, 0.19, 0.09, 0.25, 0.56, 0.38, 0.38, 0.02, 0.08, 0.14, 0.5, 0.28, 0.39, 0.23, 0.08, 0.16, 0.31, 0.09, 0.22, 0.09, 0.5, 0.11, 0.63, 0.33, 0.25, 0.44, 0.75, 0.38, 0.5, 0.28, 0.66, 0.03, 0.56, 0.47, 0.88, 0.38, 0.19, 0.22, 0.14, 0.13, 0.75, 0.55, 0.38, 0.11, 0.33, 0.13, 0.28, 0.25, 0.47, 0.55, 0.19, 0.13, 0.38, 0.55, 0.88, 0.25, 0.47, 0.06, 0.28, 0.25, 0.38, 0.22, 0.09, 0.13, 0.28, 0.5, 0.38, 0.25, 0.75, 0.22, 0.13, 0.33, 0.75, 0.11, 0.66, 0.25, 0.66, 0.13, 0.55, 0.19, 0.88, 0.22, 0.88, 0.06, 0.44, 0.33, 0.88, 0.77, 0.63, 0.11, 0.06, 0.22, 0.38, 0.25, 0.13, 0.33, 0.75, 0.19, 0.23, 0.55, 0.25, 0.11, 0.47, 0.19, 0.19, 0.23, 0.03, 0.19, 0.55, 0.08, 0.47, 0.23, 0.09, 0.31, 0.38, 0.25, 0.33, 0.14, 0.47, 0.23, 0.44, 0.33, 0.47, 0.66, 0.55, 0.77, 0.28, 0.25, 0.47, 0.11, 0.13, 0.88, 0.09, 0.55, 0.11, 0.22, 0.22, 0.38, 0.09, 0.75, 0.03, 0.56, 0.05, 0.44, 0.19, 0.47, 0.08, 0.63, 0.28, 0.25, 0.39, 0.44, 0.06, 0.33, 0.02, 0.75, 0.13, 0.55, 0.14, 0.56, 0.19, 0.5, 0.06, 0.56, 0.13, 0.28, 0.22, 0.31, 0.09, 0.63, 0.09, 0.77, 0.38, 0.13, 0.39, 0.23, 0.05, 0.22, 0.44, 0.88, 0.06, 0.66, 0.25, 0.38, 0.03, 0.44, 0.23, 0.63, 0.05, 0.75, 0.19, 0.63, 0.33, 0.88, 0.25, 0.63, 0.05, 0.5, 0.11, 0.55, 0.66, 0.38, 0.75, 0.22, 0.66, 0.38, 0.75, 0.16, 0.33, 0.03, 0.44, 0.19, 0.25, 0.11, 0.88, 0.22, 0.77, 0.09, 0.75, 0.08, 0.63, 0.13, 0.13, 0.25, 0.22, 0.33, 0.16, 0.14, 0.56, 0.38, 0.25, 0.06, 0.38, 0.31, 0.5, 0.28, 0.31, 0.08, 0.88, 0.47, 0.66, 0.09, 0.77, 0.55, 0.66, 0.5, 0.75, 0.05, 0.28, 0.16, 0.63, 0.02, 0.38, 0.09, 0.13, 0.06, 0.56, 0.33, 0.25, 0.23, 0.16, 0.31, 0.39, 0.23, 0.11, 0.19, 0.14, 0.11, 0.47, 0.16, 0.23, 0.09, 0.77, 0.19, 0.88, 0.22, 0.75, 0.44, 0.66, 0.09, 0.25, 0.13, 0.77, 0.19, 0.63, 0.19, 0.56, 0.25, 0.23, 0.28, 0.25, 0.22, 0.66, 0.28, 0.39, 0.23, 0.19, 0.19, 0.63, 0.09, 0.77, 0.31, 0.63, 0.47, 0.16, 0.25, 0.63, 0.22, 0.28, 0.44, 0.75, 0.19, 0.63, 0.06, 0.38, 0.19, 0.31, 0.03, 0.22, 0.47, 0.5, 0.06, 0.55, 0.08, 0.44, 0.09, 0.33, 0.11, 0.22, 0.13, 0.38, 1, 0.22, 0.77, 0.11, 0.13, 0.09, 0.16, 0.19, 0.39, 0.28, 0.47, 0.23, 0.16, 0.55, 0.11, 0.25, 0.09, 0.11, 0.16, 0.44, 0.08, 0.38, 0.25, 0.44, 0.09, 0.88, 0.09, 0.75, 0.13, 0.5, 0.03, 0.77, 0.06, 0.22, 0.19, 0.55, 0.38, 0.56, 0.13, 0.63, 0.25, 0.44, 0.28, 0.38, 0.06, 0.88, 0.09, 0.44, 0.23, 0.19, 0.22, 0.66, 0.31, 0.63, 0.11, 0.63, 0.22, 1, 0.08, 0.55, 0.39, 0.63, 0.05, 0.5, 0.16, 0.55, 0.11, 0.25, 0.09, 0.11, 0.16, 0.88, 0.08, 0.75, 0.09, 0.44, 0.09, 0.56, 0.13, 0.55, 0.05, 0.63, 0.03, 0.77, 0.23, 0.75, 0.06, 0.22, 0.13, 0.44, 0.19, 0.38, 0.25, 0.5, 0.06, 0.56, 0.02, 0.66, 0.28, 0.55, 0.06, 0.56, 0.19, 0.47, 0.75, 0.88, 0.55, 0.39, 0.14, 0.38, 0.08, 0.66, 0.5, 1, 0.22, 0.44, 0.06, 0.19, 0.23, 0.63, 0.31, 0.47, 0.13, 0.28, 0.08, 0.38, 0.14, 0.66, 0.05, 0.38, 0.33, 0.13, 0.25, 0.38, 0.11, 0.05, 0.03, 0.16, 0.19, 0.14, 0.44, 0.16, 0.25, 0.25, 0.31, 0.16, 0.33, 0.11, 0.44, 0.13, 0.23, 0.28, 0.88, 0.03, 0.11, 0.09, 0.55, 0.25, 0.75, 0.05, 0.25, 0.03, 0.22, 0.16, 0.38, 0.06, 0.63, 0.08, 0.5, 0.09, 0.75, 0.09, 0.88, 0.55, 0.44, 0.19, 0.55, 0.13, 0.22, 0.19, 0.19, 0.09, 0.33, 0.11, 0.16, 0.14, 0.19, 0.16, 0.38, 0.13, 0.5, 0.06, 0.13, 0.23, 0.56, 0.09, 0.75, 0.06, 0.22, 0.06, 0.63, 0.14, 0.55, 0.31, 0.5, 0.08, 0.28, 0.06, 0.25, 0.02, 0.88, 0.09, 0.75, 0.22, 0.11, 0.31, 0.09, 0.06, 0.38, 0.19, 0.31, 0.28, 0.5, 0.09, 0.13, 0.02, 0.55, 0.13, 0.38, 0.22, 0.28, 0.23, 0.33, 0.28, 0.16, 0.03, 0.13, 0.25, 0.77, 0.31, 0.19, 0.16, 0.11, 0.23, 0.08, 0.14, 0.66, 0.44, 0.66, 0.05, 0.13, 0.88, 0.09, 0.55, 0.11, 0.22, 0.22, 0.38, 0.09, 0.75, 0.05, 0.13, 0.03, 0.63, 0.08, 0.44, 0.19, 0.56, 0.06, 0.25, 0.09, 0.33, 0.25, 0.44, 0.13, 0.5, 0.14, 0.22, 0.28, 0.55, 0.22, 0.47, 0.38, 0.38, 0.55, 0.23, 0.03, 0.13, 0.06, 0.5, 0.08, 0.11, 0.02, 0.31, 0.09, 0.75, 0.06, 0.23, 0.11, 0.38, 0.09, 0.88, 0.13, 0.31, 0.06, 0.31, 0.23, 0.38, 0.33, 0.47, 0.05, 0.88, 0.38, 0.56, 0.11, 0.31, 0.16, 0.14, 0.23, 0.77, 0.38, 0.31, 0.13, 0.88, 0.09, 0.77, 0.03, 0.44, 0.05, 0.75, 0.11, 0.63, 0.02, 0.31, 0.16, 0.38, 0.28, 0.47, 0.23, 0.88, 0.31, 0.75, 0.38, 0.56, 0.09, 0.31, 0.19, 0.25, 0.25, 0.28, 0.08, 0.5, 0.55, 0.08, 0.06, 0.13, 0.09, 0.44, 0.23, 0.11, 0.14, 0.33, 0.16, 0.19, 0.22, 0.5, 0.06, 0.77, 0.09, 0.47, 0.05, 0.16, 0.14, 0.25, 0.31, 0.38, 0.08, 0.28, 0.11, 0.88, 0.05, 0.75, 0.25, 0.38, 0.08, 1, 0.06, 0.28, 0.09, 0.09, 0.19, 0.13, 0.05, 0.56, 0.13, 0.11, 0.09, 0.03, 0.16, 0.39, 0.09, 0.22, 0.25, 0.66, 0.09, 0.06, 0.5, 0.38, 0.22, 0.55, 0.63, 0.77, 0.23, 0.66, 0.09, 0.39, 0.08, 0.56, 0.09, 0.39, 0.23, 0.56, 0.09, 0.55, 0.22, 0.16, 0.33, 0.11, 0.44, 0.13, 0.23, 0.28, 0.88, 0.03, 0.11, 0.09, 0.55, 0.25, 0.75, 0.08, 0.63, 0.05, 0.38, 0.19, 0.5, 0.11, 0.39, 0.55, 0.25, 0.06, 0.75, 0.14, 0.47, 0.31, 0.28, 0.09, 0.19, 0.02, 0.39, 0.38, 0.5, 0.16, 0.56, 0.23, 0.33, 0.13, 0.44, 0.19, 0.39, 0.09, 0.66, 0.06, 0.09, 0.03, 0.08, 0.05, 0.77, 0.25, 0.13, 0.03, 0.55, 0.06, 0.5, 0.13, 0.22, 0.14, 0.5, 0.11, 0.39, 0.05, 0.63, 0.03, 0.38, 0.16, 0.16, 0.03, 0.19, 0.09, 0.06, 0.09, 0.44, 0.06, 0.13, 0.16, 0.38, 0.09, 0.13, 0.14, 0.66, 0.31, 0.19, 0.13, 0.88, 0.09, 0.55, 0.03, 0.75, 0.16, 0.33, 0.09, 0.44, 0.11, 0.63, 0.08, 0.25, 0.03, 0.13, 0.06, 0.31, 0.19, 0.5, 0.19, 0.38, 0.05, 0.22, 0.09, 0.28, 0.16, 0.44, 0.23, 0.88, 0.19, 0.75, 0.06, 0.23, 0.14, 0.13, 0.05, 0.28, 0.09, 0.08, 0.08, 0.11, 0.28, 0.19, 0.06, 0.09, 0.39, 0.16, 0.06, 0.38, 0.03, 0.56, 0.16, 0.33, 0.44, 0.66, 0.05, 0.63, 0.14, 0.16, 0.33, 0.11, 0.55, 0.13, 0.23, 0.28, 0.88, 0.03, 0.44, 0.09, 0.25, 0.05, 0.75, 0.06, 0.63, 0.19, 0.38, 0.08, 0.28, 0.23, 0.5, 0.19, 0.75, 0.22, 0.22, 0.31, 0.38, 0.16, 0.08, 0.14, 0.47, 0.39, 0.38, 0.55, 0.33, 0.05, 0.63, 0.25, 0.38, 0.23, 0.44, 0.13, 0.28, 0.44, 0.56, 0.25, 0.31, 0.09, 0.66, 0.06, 0.38, 0.09, 0.13, 0.09, 0.11, 0.44, 0.47, 0.03, 0.33, 0.66, 0.63, 0.55, 0.88, 0.23, 0.16, 0.39, 0.38, 0.31, 0.66, 0.47, 0.13, 0.39, 0.66, 0.31, 0.14, 0.09, 0.16, 0.38, 0.14, 0.13, 0.16, 0.55, 0.11, 0.25, 0.09, 0.11, 0.16, 0.88, 0.08, 0.75, 0.09, 0.22, 0.06, 0.44, 0.09, 0.63, 0.25, 0.56, 0.13, 0.55, 0.03, 0.28, 0.09, 0.44, 0.06, 0.08, 0.06, 0.19, 0.03, 0.19, 0.05, 0.33, 0.09, 0.38, 0.25, 0.28, 0.09, 0.22, 0.06, 0.5, 0.02, 0.75, 0.14, 0.16, 0.05, 0.33, 0.28, 0.28, 0.31, 0.56, 0.14, 0.44, 0.19, 0.56, 0.38, 0.38, 0.08, 0.38, 0.13, 0.55, 0.31, 0.16, 0.33, 0.11, 0.44, 0.13, 0.23, 0.28, 0.88, 0.03, 0.11, 0.05, 0.55, 0.19, 0.5, 0.06, 0.19, 0.25, 0.25, 0.02, 0.06, 0.55, 0.77, 0.09, 0.88, 0.08, 0.38, 0.11, 0.13, 0.09, 0.22, 0.03, 0.75, 0.28, 0.63, 0.16, 0.28, 0.08, 0.08, 0.09, 0.05, 0.06, 0.16, 0.14, 0.23, 0.05, 0.44, 0.38, 0.47, 0.13, 0.38, 0.44, 0.19, 0.22, 0.38, 0.08, 0.31, 0.28, 0.22, 0.03, 0.08, 0.33, 0.03, 0.13, 1, 0.38, 0.88, 0.25, 0.02, 0.31, 0.63, 0.13, 0.44, 0.11, 0.63, 0.09, 0.75, 0.5, 0.55, 0.19, 0.77, 0.44, 0.88, 0.16, 0.33, 0.11, 0.44, 0.13, 0.23, 0.28, 0.88, 0.03, 0.77, 0.05, 0.75, 0.19, 0.11, 0.09, 0.22, 0.19, 0.38, 0.06, 0.25, 0.03, 0.16, 0.14, 0.09, 0.23, 0.63, 0.08, 0.44, 0.75, 0.88, 0.31, 0.55, 0.25, 0.88, 0.25, 0.38, 0.31, 0.22, 0.13, 0.23, 0.09, 0.38, 0.05, 0.44, 0.06, 0.08, 0.25, 0.06, 0.06, 0.13, 0.13, 0.5, 0.13, 0.75, 0.31, 0.08, 0.09, 0.25, 0.38, 0.13, 0.19, 0.13, 0.77, 0.11, 0.75, 0.22, 0.33, 0.09, 0.23, 0.28, 0.25, 0.25, 0.44, 0.08, 0.38, 0.03, 0.5, 0.13, 0.47, 0.22, 0.44, 0.06, 0.88, 0.05, 0.77, 0.09, 0.63, 0.19, 0.38, 0.02, 0.47, 0.06, 0.66, 0.31, 0.75, 0.13, 0.55, 0.31, 0.88, 0.09, 0.66, 0.16, 0.75, 0.06, 0.38, 0.28, 0.5, 0.25, 0.28, 0.25, 0.5, 0.33, 0.66, 0.13, 0.77, 0.11, 0.22, 0.03, 0.11, 0.09, 0.13, 0.44, 0.38, 0.25, 0.66, 0.28, 0.16, 0.05, 0.08, 0.08, 0.38, 0.02, 0.13, 0.06, 0.13, 0.88, 0.09, 0.77, 0.03, 0.75, 0.16, 0.44, 0.11, 0.63, 0.09, 0.33, 0.25, 0.55, 0.08, 0.47, 0.19, 0.75, 0.06, 0.38, 0.05, 0.11, 0.03, 0.56, 0.38, 0.77, 0.55, 0.25, 0.25, 0.44, 0.16, 0.63, 0.02, 0.56, 0.28, 0.55, 0.09, 0.44, 0.44, 0.22, 0.06, 0.13, 0.19, 0.16, 0.14, 0.23, 0.11, 0.5, 0.13, 0.56, 0.06, 0.25, 0.08, 0.33, 0.09, 0.66, 0.25, 0.38, 0.06, 0.19, 0.11, 0.77, 0.22, 0.75, 0.09, 0.55, 0.08, 0.25, 0.13, 0.44, 0.09, 0.66, 0.03, 0.88, 0.02, 0.11, 0.03, 0.63, 0.06, 0.08, 0.05, 0.88, 0.13, 0.28, 0.19, 0.38, 0.05, 0.56, 0.23, 0.33, 0.28, 0.44, 0.03, 0.38, 0.02, 0.5, 0.13, 0.75, 0.09, 0.38, 0.06, 0.11, 0.88, 0.22, 0.77, 0.09, 0.75, 0.08, 0.63, 0.13, 0.44, 0.09, 0.25, 0.03, 0.38, 0.25, 0.28, 0.28, 0.33, 0.06, 0.5, 0.06, 0.44, 0.05, 0.38, 0.11, 0.55, 0.31, 0.66, 0.02, 0.08, 0.13, 0.13, 0.14, 0.28, 0.31, 0.77, 0.09, 0.44, 0.06, 0.77, 0.03, 0.13, 0.13, 0.56, 0.09, 0.77, 0.22, 0.75, 0.09, 0.33, 0.03, 0.25, 0.03, 0.55, 0.16, 0.88, 0.11, 0.63, 0.08, 0.44, 0.13, 0.22, 0.02, 0.38, 0.06, 0.5, 0.05, 0.28, 0.06, 0.55, 0.23, 0.66, 0.75, 0.44, 0.16, 0.28, 0.19, 0.13, 0.13, 0.47, 0.19, 0.47, 0.09, 0.75, 0.03, 0.5, 0.05, 0.77, 0.13, 0.88, 0.22, 0.66, 0.19, 0.39, 0.33, 0.56, 0.13, 0.25, 0.14, 0.66, 0.38, 0.47, 0.13, 0.38, 0.19, 0.77, 0.09, 0.66, 0.23, 0.75, 0.31, 0.39, 0.06, 0.22, 0.38, 0.55, 0.5, 0.16, 0.11, 0.63, 0.22, 0.16, 0.38, 0.63, 0.22, 0.16, 0.13, 0.44, 0.11, 0.88, 0.09, 0.33, 0.16, 0.55, 0.09, 0.25, 0.03, 0.75, 0.23, 0.31, 0.13, 0.56, 0.19, 0.38, 0.05, 0.13, 0.06, 0.63, 0.08, 0.28, 0.25, 0.5, 0.13, 0.33, 0.38, 0.44, 0.31, 0.22, 0.06, 0.23, 0.09, 0.13, 0.03, 0.38, 0.13, 0.22, 0.08, 0.25, 0.05, 0.22, 0.06, 0.75, 0.31, 0.88, 0.25, 0.75, 0.06, 0.33, 0.5, 0.66, 0.38, 0.77, 0.88, 0.55, 1, 0.38, 0.75, 0.47, 0.28, 0.44, 0.13, 0.55, 0.08, 0.09, 1, 0.47, 0.38, 0.44, 0.16, 0.33, 0.19, 0.77, 0.11, 0.75, 0.03, 0.44, 0.09, 0.55, 0.13, 0.23, 0.28, 0.11, 0.08, 0.25, 0.05, 0.88, 0.06, 0.38, 0.31, 0.47, 0.19, 0.63, 0.02, 0.38, 0.16, 0.28, 0.23, 0.77, 0.13, 0.13, 0.09, 0.75, 0.19, 0.5, 0.22, 0.88, 0.11, 0.22, 0.03, 0.55, 0.25, 0.31, 0.14, 0.88, 0.06, 0.47, 0.13, 0.31, 0.25, 0.33, 0.31, 0.28, 0.55, 0.63, 0.06, 0.22, 0.13, 0.38, 0.09, 0.47, 0.19, 0.31, 0.08, 0.09, 0.13, 0.28, 0.55, 0.16, 0.44, 0.16, 0.33, 0.19, 0.25, 0.11, 0.77, 0.09, 0.75, 0.08, 0.88, 0.03, 0.63, 0.16, 0.22, 0.13, 0.44, 0.06, 0.56, 0.06, 0.63, 0.05, 0.33, 0.14, 0.16, 0.08, 0.5, 0.28, 0.66, 0.09, 0.25, 0.22, 0.38, 0.06, 0.13, 0.13, 0.44, 0.09, 0.88, 0.02, 0.19, 0.19, 0.5, 0.31, 0.16, 0.55, 0.11, 0.25, 0.09, 0.11, 0.16, 0.88, 0.06, 0.75, 0.08, 0.22, 0.06, 0.44, 0.09, 0.63, 0.09, 0.28, 0.09, 0.33, 0.13, 0.5, 0.25, 0.38, 0.03, 0.75, 0.06, 0.38, 0.05, 0.56, 0.22, 0.63, 0.28, 0.77, 0.5, 0.08, 0.02, 0.33, 0.22, 0.38, 0.19, 0.5, 0.13, 0.13, 0.06, 0.5, 0.05, 0.55, 0.09, 0.88, 0.03, 0.47, 0.06, 0.09, 0.19, 0.44, 0.23, 0.56, 0.09, 0.09, 0.16, 0.03, 0.06, 0.44, 0.16, 0.55, 0.03, 0.88, 0.11, 0.25, 0.09, 0.75, 0.08, 0.63, 0.16, 0.22, 0.28, 0.13, 0.13, 0.56, 0.06, 0.31, 0.09, 0.66, 0.39, 0.38, 0.14, 0.44, 0.06, 0.38, 0.05, 0.28, 0.25, 0.5, 0.02, 0.47, 0.06, 0.75, 0.19, 0.63, 0.08, 0.13, 0.11, 0.63, 0.14, 0.66, 0.23, 0.33, 0.06, 0.5, 0.05, 0.47, 0.28, 0.88, 0.31, 0.66, 0.23, 0.44, 0.19, 0.16, 0.55, 0.11, 0.25, 0.09, 0.11, 0.16, 0.88, 0.08, 0.44, 0.09, 0.38, 0.25, 0.44, 0.13, 0.75, 0.09, 0.56, 0.03, 0.44, 0.06, 0.23, 0.13, 0.47, 0.05, 0.55, 0.09, 0.63, 0.06, 0.77, 0.33, 0.5, 0.28, 0.63, 0.09, 0.56, 0.23, 0.66, 0.31, 0.75, 0.19, 0.47, 0.16, 0.55, 0.25, 0.28, 0.44, 0.33, 0.31, 0.13, 0.08, 0.13, 0.88, 0.09, 0.33, 0.16, 0.77, 0.03, 0.75, 0.11, 0.63, 0.09, 0.23, 0.28, 0.25, 0.08, 0.28, 0.23, 0.44, 0.05, 0.31, 0.09, 0.88, 0.03, 0.77, 0.13, 0.44, 0.11, 0.75, 0.06, 0.38, 0.06, 0.44, 0.16, 0.55, 0.28, 0.31, 0.09, 0.28, 0.13, 0.22, 0.19, 0.66, 0.09, 0.5, 0.47, 0.55, 0.38, 0.5, 0.47, 0.55, 0.38, 0.16, 0.33, 0.11, 0.44, 0.09, 0.38, 0.16, 0.5, 0.09, 0.25, 0.08, 0.77, 0.13, 0.23, 0.28, 0.75, 0.05, 0.28, 0.06, 0.88, 0.19, 0.66, 0.03, 0.47, 0.14, 0.75, 0.25, 0.66, 0.31, 0.88, 0.06, 0.55, 0.33, 0.63, 0.25, 0.22, 0.28, 0.39, 0.02, 0.16, 0.09, 0.13, 0.16, 0.28, 0.23, 0.5, 0.09, 0.63, 0.11, 0.16, 0.33, 0.11, 0.25, 0.09, 0.77, 0.08, 0.75, 0.09, 0.88, 0.09, 0.63, 0.25, 0.11, 0.16, 0.22, 0.13, 0.23, 0.14, 0.44, 0.31, 0.56, 0.03, 0.63, 0.06, 0.33, 0.05, 0.19, 0.22, 0.38, 0.09, 0.5, 0.06, 0.66, 0.02, 0.13, 0.39, 0.16, 0.55, 0.11, 0.25, 0.09, 0.88, 0.06, 0.75, 0.09, 0.44, 0.13, 0.56, 0.08, 0.63, 0.03, 0.55, 0.25, 0.28, 0.16, 0.33, 0.14, 0.11, 0.06, 0.77, 0.05, 0.28, 0.05, 0.56, 0.22, 0.88, 0.02, 0.44, 0.28, 0.56, 0.5, 0.08, 0.19, 0.66, 0.22, 0.88, 0.06, 0.06, 0.03, 0.38, 0.09, 0.38, 0.16, 0.75, 0.38, 0.66, 0.19, 0.55, 0.25, 0.55, 0.33, 0.77, 0.16, 0.5, 0.11, 0.75, 0.09, 0.22, 0.19, 0.44, 0.13, 0.38, 0.19, 0.13, 0.63, 0.88, 0.14, 0.05, 0.06, 0.75, 0.23, 0.03, 0.06, 0.16, 0.06, 0.13, 0.63, 0.25, 0.14, 0.13, 0.08, 0.88, 0.13, 0.44, 0.16, 0.03, 0.11, 0.16, 0.14, 0.55, 0.38, 0.75, 0.06, 0.88, 0.03, 0.75, 0.19, 0.88, 0.08, 0.09, 0.13, 0.22, 0.28, 0.16, 0.63, 0.63, 0.16, 0.16, 0.55, 0.63, 0.28, 0.09, 0.14, 0.03, 0.05, 0.08, 0.06, 0.11, 0.08, 0.23, 0.09, 0.16, 0.14, 0.03, 0.05, 0.03, 0.13, 0.09, 0.75, 0.19, 0.05, 0.19, 0.09, 0.31, 0.63, 0.31, 0.05, 0.5, 0.06, 0.06, 0.08, 0.5, 0.06, 0.06, 0.05, 0.02, 0.09, 0.06, 0.19, 0.16, 0.23, 0.22, 0.31, 0.03, 0.23, 0.66, 0.38, 0.11, 0.56, 0.77, 0.5, 0.88, 0.13, 0.88, 0.13, 0.88, 0.09, 0.55, 0.11, 0.44, 0.03, 0.75, 0.05, 0.63, 0.16, 0.88, 0.55, 0.22, 0.02, 0.38, 0.19, 0.56, 0.5, 0.5, 0.14, 0.22, 0.09, 0.31, 0.06, 0.55, 0.08, 0.25, 0.28, 0.75, 0.28, 0.13, 0.19, 0.13, 0.31, 0.06, 0.14, 0.19, 0.19, 0.16, 0.09, 0.09, 0.13, 0.44, 0.19, 0.47, 0.05, 0.08, 0.28, 0.09, 0.16, 0.22, 0.28, 0.09, 0.16, 0.22, 0.16, 0.77, 0.13, 0.75, 0.11, 0.44, 0.03, 0.88, 0.09, 0.63, 0.08, 0.38, 0.05, 0.25, 0.25, 0.44, 0.16, 0.56, 0.14, 0.88, 0.55, 0.55, 0.09, 0.44, 0.06, 0.38, 0.31, 0.19, 0.28, 0.5, 0.25, 0.31, 0.16, 0.39, 0.06, 0.88, 0.09, 0.13, 0.05, 0.75, 0.06, 0.28, 0.23, 0.77, 0.13, 0.31, 0.02, 0.5, 0.14, 0.39, 0.06, 0.16, 0.11, 0.33, 0.09, 0.63, 0.13, 0.88, 0.19, 0.55, 0.19, 0.11, 0.28, 0.44, 0.23, 0.08, 0.22, 0.66, 0.38, 0.47, 0.38, 0.31, 0.5, 0.75, 0.31, 0.56, 0.09, 0.25, 0.47, 0.28, 0.03, 0.77, 0.06, 0.31, 0.38, 0.47, 0.25, 0.19, 0.38, 0.09, 0.25, 0.16, 0.38, 0.47, 0.25, 0.56, 0.22, 0.66, 0.19, 0.16, 0.38, 0.47, 0.23, 0.09, 0.22, 0.03, 0.28, 0.05, 0.22, 0.03, 0.28, 0.09, 0.22, 0.22, 0.25, 0.06, 0.47, 0.77, 0.33, 0.63, 0.23, 0.75, 0.38, 0.56, 0.19, 0.66, 0.25, 0.47, 0.33, 0.77, 0.13, 0.31, 0.19, 0.66, 0.33, 0.19, 0.38, 0.09, 0.33, 0.19, 0.22, 0.31, 0.33, 0.38, 0.38, 0.09, 0.33, 0.08, 0.22, 0.13, 0.38, 0.19, 0.22, 0.31, 0.38, 0.13, 0.33, 0.5, 0.28, 0.38, 0.19, 0.25, 0.09, 0.38, 0.08, 0.33, 0.09, 0.38, 0.19, 0.55, 0.22, 0.47, 0.09, 0.39, 0.23, 0.31, 0.19, 0.23, 0.05, 0.28, 0.06, 0.31, 0.09, 0.11, 0.77, 0.09, 0.75, 0.13, 0.66, 0.22, 0.88, 0.09, 0.63, 0.08, 0.44, 0.03, 0.25, 0.25, 0.28, 0.28, 0.33, 0.03, 0.38, 0.06, 0.5, 0.06, 0.11, 0.05, 0.22, 0.14, 0.16, 0.09, 0.13, 0.06, 0.56, 0.14, 0.88, 0.09, 0.77, 0.06, 0.25, 0.06, 0.75, 0.02, 0.22, 0.09, 0.25, 0.13, 0.33, 0.03, 0.44, 0.25, 0.88, 0.11, 0.08, 0.16, 0.47, 0.13, 0.22, 0.31, 0.66, 0.19, 0.5, 0.38, 0.66, 0.47, 0.19, 0.22, 0.03, 0.25, 0.44, 0.31, 0.66, 0.14, 0.88, 0.55, 0.56, 0.19, 0.03, 0.28, 0.63, 0.63, 0.31, 0.47, 0.44, 0.47, 0.63, 0.23, 0.5, 0.47, 0.14, 0.66, 0.19, 0.22, 0.31, 0.38, 0.08, 0.75, 0.14, 0.38, 0.05, 0.5, 0.14, 0.66, 0.55, 0.44, 0.44, 0.06, 0.56, 0.09, 0.55, 0.11, 0.31, 0.88, 0.5, 1, 0.44, 0.63, 0.56, 0.25, 0.28, 0.11, 0.06, 0.22, 0.44, 0.77, 0.16, 0.75, 0.19, 0.13, 0.55, 0.09, 0.66, 0.16, 0.88, 0.09, 0.44, 0.11, 0.75, 0.08, 0.63, 0.06, 0.56, 0.05, 0.25, 0.05, 0.5, 0.06, 0.38, 0.03, 0.31, 0.05, 0.44, 0.28, 0.47, 0.23, 0.47, 0.31, 0.28, 0.08, 0.33, 0.19, 0.55, 0.09, 0.39, 0.14, 0.77, 0.02, 0.63, 0.08, 0.44, 0.31, 0.13, 0.19, 0.63, 0.09, 0.75, 0.31, 0.66, 0.16, 0.63, 0.08, 0.56, 0.09, 0.16, 0.33, 0.13, 0.44, 0.03, 0.31, 0.14, 0.38, 0.31, 0.47, 0.11, 0.25, 0.25, 0.88, 0.5, 0.66, 0.09, 0.88, 0.06, 0.5, 0.13, 0.55, 0.05, 0.75, 0.38, 0.33, 0.33, 0.38, 0.19, 0.13, 0.06, 0.63, 0.31, 0.88, 0.23, 1, 0.28, 0.28, 0.22, 0.38, 0.08, 0.13, 0.39, 0.56, 0.25, 0.47, 0.06, 0.44, 0.31, 0.55, 0.08, 0.23, 0.09, 0.33, 0.5, 0.19, 0.39, 0.23, 0.25, 0.38, 0.22, 0.77, 0.63, 0.66, 0.47, 0.44, 0.31, 0.75, 0.19, 0.56, 0.38, 0.88, 0.47, 0.23, 0.05, 0.77, 0.63, 0.75, 0.75, 0.66, 0.44, 0.08, 0.13, 0.77, 0.23, 0.03, 0.38, 0.56, 0.28, 0.11, 0.19, 0.66, 0.33, 0.56, 0.31, 0.09, 0.25, 0.19, 0.39, 0.16, 0.28, 0.66, 0.33, 0.19, 0.14, 0.08, 0.19, 0.06, 0.23, 0.03, 0.31, 0.13, 0.23, 0.09, 0.38, 0.05, 0.11, 0.13, 0.33, 0.09, 0.44, 0.13, 0.28, 0.09, 0.38, 0.13, 0.22, 0.06, 0.28, 0.09, 0.11, 0.88, 0.22, 0.77, 0.09, 0.75, 0.08, 0.63, 0.13, 0.33, 0.16, 0.25, 0.03, 0.44, 0.09, 0.22, 0.09, 0.31, 0.19, 0.56, 0.22, 0.44, 0.06, 0.38, 0.28, 0.28, 0.19, 0.39, 0.09, 0.5, 0.13, 0.13, 0.05, 0.23, 0.02, 0.44, 0.23, 0.33, 0.09, 0.23, 0.11, 0.55, 0.09, 0.19, 0.38, 0.75, 0.25, 0.77, 0.19, 0.56, 0.08, 0.88, 0.06, 0.63, 0.23, 0.22, 0.31, 0.5, 0.22, 0.25, 0.16, 0.11, 0.06, 0.08, 0.09, 0.16, 0.09, 0.19, 0.31, 0.88, 0.47, 0.66, 0.03, 0.55, 0.13, 0.77, 0.16, 0.05, 0.28, 0.38, 0.09, 0.33, 0.09, 0.88, 0.03, 0.55, 0.11, 0.44, 0.13, 0.75, 0.05, 0.63, 0.16, 0.33, 0.25, 0.55, 0.03, 0.25, 0.09, 0.31, 0.16, 0.5, 0.08, 0.88, 0.38, 0.56, 0.33, 0.77, 0.5, 0.63, 0.25, 0.38, 0.14, 0.75, 0.33, 0.23, 0.06, 0.19, 0.06, 0.28, 0.28, 0.33, 0.02, 0.44, 0.31, 0.11, 0.19, 0.08, 0.05, 0.39, 0.16, 0.22, 0.16, 0.38, 0.13, 0.5, 0.09, 0.13, 0.06, 0.5, 0.25, 0.47, 0.19, 0.55, 0.25, 0.31, 0.56, 0.47, 0.09, 0.55, 0.03, 0.25, 0.22, 0.77, 0.09, 0.75, 0.16, 0.44, 0.13, 0.88, 0.11, 0.63, 0.08, 0.38, 0.14, 0.13, 0.05, 0.66, 0.55, 0.56, 0.06, 0.55, 0.19, 0.28, 0.16, 0.39, 0.23, 0.5, 0.02, 0.75, 0.55, 0.77, 0.13, 0.44, 0.09, 0.33, 0.31, 0.22, 0.06, 0.28, 0.31, 0.38, 0.39, 0.47, 0.75, 0.38, 0.33, 0.66, 0.22, 0.88, 0.31, 0.11, 0.19, 0.25, 0.05, 0.16, 0.09, 0.55, 0.03, 0.44, 0.13, 0.75, 0.05, 0.33, 0.19, 0.47, 0.16, 0.38, 0.22, 0.47, 0.25, 0.25, 0.5, 0.5, 0.02, 0.88, 0.19, 0.88, 0.09, 0.19, 0.11, 0.22, 0.16, 0.08, 0.05, 0.63, 0.14, 0.11, 0.16, 0.08, 0.09, 0.28, 0.33, 0.47, 0.19, 0.23, 0.23, 0.5, 0.05, 0.55, 0.06, 0.38, 0.16, 0.75, 0.08, 0.44, 0.13, 0.77, 0.09, 0.75, 0.03, 0.44, 0.16, 0.88, 0.09, 0.63, 0.11, 0.38, 0.08, 0.56, 0.05, 0.55, 0.28, 0.44, 0.06, 0.25, 0.16, 0.47, 0.25, 0.28, 0.08, 0.25, 0.13, 0.66, 0.19, 0.75, 0.06, 0.77, 0.02, 0.75, 0.09, 0.44, 0.14, 0.33, 0.31, 0.22, 0.06, 0.38, 0.19, 0.31, 0.23, 0.19, 0.06, 0.47, 0.22, 0.55, 0.75, 0.5, 0.11, 0.55, 0.33, 0.88, 0.13, 0.11, 0.03, 0.13, 0.19, 0.66, 0.19, 0.75, 0.05, 0.11, 0.09, 0.13, 0.19, 0.11, 0.38, 0.13, 0.13, 0.55, 0.16, 0.33, 0.19, 0.22, 0.03, 0.44, 0.25, 0.47, 0.05, 0.55, 0.13, 0.47, 0.05, 0.55, 0.13, 0.25, 0.19, 0.33, 0.44, 0.88, 0.16, 0.33, 0.13, 0.44, 0.03, 0.31, 0.13, 0.38, 0.31, 0.47, 0.11, 0.25, 0.09, 0.55, 0.06, 0.88, 0.08, 0.75, 0.09, 0.5, 0.28, 0.44, 0.25, 0.56, 0.19, 0.63, 0.03, 0.31, 0.05, 0.5, 0.02, 1, 0.06, 0.33, 0.38, 0.38, 0.33, 0.19, 0.23, 0.55, 0.22, 0.5, 0.25, 0.19, 0.13, 0.25, 0.16, 0.66, 0.11, 0.31, 0.63, 0.31, 0.05, 0.25, 0.09, 0.22, 0.09, 0.28, 0.14, 0.33, 0.08, 0.75, 0.38, 0.55, 0.13, 0.28, 0.05, 0.11, 0.19, 0.88, 0.55, 0.63, 0.33, 0.28, 0.5, 0.44, 0.06, 0.75, 0.5, 0.66, 0.28, 0.77, 0.09, 0.16, 0.06, 0.28, 0.06, 0.03, 0.06, 0.66, 0.44, 0.31, 0.19, 0.22, 0.11, 0.13, 0.25, 0.16, 0.33, 0.13, 0.44, 0.03, 0.31, 0.14, 0.38, 0.31, 0.47, 0.25, 0.88, 0.11, 0.25, 0.5, 0.66, 0.09, 0.88, 0.06, 0.5, 0.13, 0.55, 0.05, 0.75, 0.38, 0.33, 0.33, 0.38, 0.08, 0.88, 0.31, 0.63, 0.13, 0.38, 0.22, 0.44, 0.19, 0.19, 0.19, 0.38, 0.09, 0.55, 0.03, 0.44, 0.13, 0.75, 0.19, 0.47, 0.05, 0.33, 0.16, 0.38, 0.22, 0.47, 0.25, 0.25, 0.5, 0.5, 0.02, 0.88, 0.19, 0.88, 0.09, 0.19, 0.11, 0.22, 0.16, 0.08, 0.05, 0.63, 0.14, 0.11, 0.16, 0.08, 0.09, 0.28, 0.33, 0.47, 0.19, 0.23, 0.23, 0.5, 0.05, 0.55, 0.06, 0.38, 0.16, 0.75, 0.08, 0.44];
  Samples.a2 = [0.31, 0.47, 0.25, 0.31, 0.13, 0.31, 0.31, 0.44, 0.28, 0.55, 0.19, 0.56, 0.11, 0.31, 0.31, 0.23, 0.14, 0.56, 0.19, 0.25, 0.16, 0.44, 0.44, 0.44, 0.25, 0.25, 0.25, 0.09, 0.55, 0.31, 0.55, 0.55, 0.31, 0.23, 0.28, 0.28, 0.25, 0.25, 0.25, 0.66, 0.19, 0.56, 0.14, 0.25, 0.25, 0.38, 0.16, 0.77, 0.11, 0.88, 0.23, 0.44, 0.13, 0.09, 0.06, 0.08, 0.05, 0.28, 0.38, 0.47, 0.06, 0.55, 0.19, 0.44, 0.08, 0.23, 0.16, 0.06, 0.03, 0.16, 0.16, 0.77, 0.08, 0.08, 0.08, 0.13, 0.19, 0.44, 0.33, 0.39, 0.38, 0.47, 0.23, 0.75, 0.31, 0.39, 0.28, 0.28, 0.16, 0.09, 0.28, 0.28, 0.11, 0.56, 0.25, 0.25, 0.25, 0.23, 0.09, 0.06, 0.06, 0.44, 0.14, 0.38, 0.38, 0.47, 0.5, 0.5, 0.06, 0.38, 0.31, 0.31, 0.31, 0.38, 0.38, 0.38, 0.08, 0.44, 0.08, 0.55, 0.31, 0.23, 0.28, 0.28, 0.25, 0.25, 0.25, 0.66, 0.19, 0.56, 0.14, 0.25, 0.25, 0.38, 0.16, 0.77, 0.11, 0.88, 0.23, 0.44, 0.13, 0.09, 0.06, 0.08, 0.05, 0.28, 0.38, 0.47, 0.06, 0.55, 0.28, 0.44, 0.08, 0.23, 0.16, 0.06, 0.03, 0.16, 0.16, 0.77, 0.08, 0.08, 0.08, 0.13, 0.19, 0.44, 0.33, 0.39, 0.38, 0.47, 0.23, 0.75, 0.31, 0.28, 0.25, 0.31, 0.13, 0.31, 0.31, 0.47, 0.33, 0.66, 0.5, 0.75, 0.28, 0.44, 0.63, 0.88, 0.19, 0.19, 0.19, 0.56, 0.13, 0.33, 0.05, 0.38, 0.16, 0.47, 0.39, 0.19, 0.08, 0.23, 0.19, 0.38, 0.03, 0.25, 0.23, 0.23, 0.38, 0.06, 0.06, 0.38, 0.31, 0.55, 0.05, 0.31, 0.31, 0.47, 0.19, 0.63, 0.13, 0.19, 0.13, 0.11, 0.06, 0.19, 0.38, 0.13, 0.19, 0.19, 0.44, 0.44, 0.44, 0.23, 0.33, 0.88, 0.19, 0.25, 0.55, 0.55, 0.47, 0.38, 0.38, 0.25, 0.38, 0.11, 0.09, 0.77, 0.23, 0.33, 0.09, 0.33, 0.19, 0.23, 0.31, 0.31, 0.09, 0.23, 0.09, 0.16, 0.06, 0.03, 0.47, 0.14, 0.39, 0.39, 0.39, 0.05, 0.16, 0.09, 0.55, 0.5, 0.22, 0.16, 0.16, 0.38, 0.28, 0.33, 0.16, 0.28, 0.39, 0.38, 0.19, 0.05, 0.22, 0.09, 0.08, 0.16, 0.13, 0.47, 0.28, 0.47, 0.08, 0.08, 0.63, 0.05, 0.23, 0.08, 0.31, 0.39, 0.28, 0.28, 0.19, 0.56, 0.25, 0.25, 0.11, 0.31, 0.08, 0.31, 0.31, 0.31, 0.14, 0.08, 0.31, 0.47, 0.13, 0.13, 0.25, 0.25, 0.14, 0.55, 0.25, 0.31, 0.05, 0.28, 0.55, 0.55, 0.23, 0.03, 0.55, 0.38, 0.13, 0.31, 0.39, 0.28, 0.28, 0.16, 0.09, 0.06, 0.56, 0.25, 0.25, 0.11, 0.55, 0.39, 0.31, 0.25, 0.25, 0.25, 0.23, 0.14, 0.88, 0.31, 0.38, 0.55, 0.55, 0.38, 0.38, 0.38, 0.38, 0.09, 0.09, 0.09, 0.47, 0.14, 0.31, 0.39, 0.28, 0.28, 0.16, 0.09, 0.06, 0.56, 0.11, 0.55, 0.08, 0.16, 0.09, 0.88, 0.14, 0.31, 0.31, 0.31, 0.39, 0.39, 0.39, 0.28, 0.25, 0.38, 0.08, 0.5, 0.33, 0.38, 0.23, 0.44, 0.19, 0.23, 0.23, 0.23, 0.31, 0.5, 0.13, 0.33, 0.22, 0.75, 0.28, 0.19, 0.39, 0.47, 0.28, 0.44, 0.39, 0.47, 0.28, 0.31, 0.39, 0.28, 0.28, 0.16, 0.09, 0.28, 0.28, 0.11, 0.44, 0.38, 0.63, 0.19, 0.56, 0.13, 0.38, 0.08, 0.55, 0.25, 0.66, 0.44, 0.44, 0.25, 0.25, 0.44, 0.5, 0.5, 0.5, 0.28, 0.63, 0.39, 0.39, 0.39, 0.39, 0.14, 0.38, 0.23, 0.31, 0.23, 0.28, 0.28, 0.25, 0.25, 0.25, 0.56, 0.14, 0.38, 0.55, 0.44, 0.13, 0.09, 0.05, 0.16, 0.28, 0.28, 0.23, 0.08, 0.03, 0.47, 0.56, 0.56, 0.31, 0.55, 0.55, 0.55, 0.16, 0.13, 0.28, 0.23, 0.39, 0.23, 0.38, 0.44, 0.28, 0.28, 0.23, 0.25, 0.56, 0.19, 0.66, 0.14, 0.31, 0.28, 0.77, 0.09, 0.19, 0.19, 0.88, 0.31, 0.09, 0.39, 0.16, 0.09, 0.44, 0.38, 0.75, 0.38, 0.22, 0.16, 0.47, 0.06, 0.44, 0.11, 0.23, 0.23, 0.38, 0.28, 0.28, 0.44, 0.23, 0.13, 0.47, 0.25, 0.08, 0.09, 0.28, 0.28, 0.25, 0.31, 0.25, 0.22, 0.13, 0.03, 0.16, 0.13, 0.38, 0.08, 0.22, 0.22, 0.09, 0.31, 0.75, 0.09, 0.38, 0.38, 0.09, 0.09, 0.38, 0.47, 0.5, 0.66, 0.66, 0.28, 0.55, 0.5, 0.75, 0.63, 0.56, 0.16, 0.06, 0.06, 0.38, 0.13, 0.25, 0.56, 0.19, 0.66, 0.14, 0.31, 0.38, 0.77, 0.23, 0.88, 0.05, 0.23, 0.23, 0.47, 0.28, 0.28, 0.16, 0.31, 0.19, 0.66, 0.33, 0.77, 0.22, 0.23, 0.14, 0.28, 0.23, 0.47, 0.16, 0.55, 0.11, 0.88, 0.25, 0.25, 0.25, 0.25, 0.25, 0.31, 0.31, 0.31, 0.31, 0.31, 0.23, 0.47, 0.09, 0.44, 0.05, 0.38, 0.05, 0.09, 0.09, 0.05, 0.05, 0.38, 0.19, 0.23, 0.28, 0.66, 0.25, 0.25, 0.25, 0.28, 0.09, 0.77, 0.31, 0.38, 0.16, 0.47, 0.47, 0.47, 0.11, 0.75, 0.14, 0.88, 0.23, 0.25, 0.19, 0.19, 0.19, 0.47, 0.09, 0.09, 0.09, 0.47, 0.31, 0.55, 0.13, 0.38, 0.08, 0.66, 0.19, 0.31, 0.31, 0.31, 0.09, 0.25, 0.16, 0.16, 0.16, 0.63, 0.19, 0.09, 0.63, 0.63, 0.05, 0.47, 0.47, 0.47, 0.09, 0.39, 0.23, 0.5, 0.16, 0.66, 0.14, 0.25, 0.25, 0.47, 0.14, 0.66, 0.38, 0.66, 0.23, 0.66, 0.19, 0.38, 0.08, 0.88, 0.33, 0.44, 0.05, 0.88, 0.23, 0.47, 0.09, 0.44, 0.06, 0.11, 0.05, 0.38, 0.38, 0.19, 0.23, 0.23, 0.23, 0.63, 0.19, 0.47, 0.38, 0.39, 0.13, 0.16, 0.5, 1, 0.16, 0.08, 0.19, 0.23, 0.28, 0.66, 0.25, 0.25, 0.25, 0.28, 0.31, 0.56, 0.14, 0.25, 0.25, 0.38, 0.23, 0.77, 0.05, 0.88, 0.13, 0.44, 0.55, 0.56, 0.38, 0.39, 0.23, 0.23, 0.23, 0.47, 0.16, 0.5, 0.33, 0.38, 0.06, 0.31, 0.11, 0.47, 0.38, 0.5, 0.06, 0.38, 0.38, 0.75, 0.06, 0.23, 0.28, 0.31, 0.38, 0.38, 0.31, 0.47, 0.09, 0.33, 0.19, 0.19, 0.38, 0.19, 0.25, 0.33, 0.11, 0.19, 0.25, 0.28, 0.23, 0.33, 0.66, 0.22, 0.77, 0.11, 0.28, 0.19, 0.47, 0.31, 0.55, 0.08, 0.38, 0.14, 0.39, 0.05, 0.88, 0.13, 0.75, 0.13, 0.47, 0.06, 0.44, 0.03, 0.19, 0.25, 0.44, 0.31, 0.5, 0.23, 0.23, 0.19, 0.47, 0.38, 0.28, 0.31, 0.56, 0.39, 0.31, 0.25, 0.38, 0.28, 0.44, 0.38, 0.28, 0.28, 0.39, 0.39, 0.47, 0.31, 0.44, 0.19, 0.28, 0.11, 0.33, 0.08, 0.55, 0.13, 0.38, 0.05, 0.55, 0.09, 0.63, 0.33, 0.5, 0.44, 0.25, 0.56, 0.28, 0.66, 0.38, 0.77, 0.14, 0.88, 0.23, 0.38, 0.38, 0.44, 0.16, 0.19, 0.11, 0.22, 0.25, 0.47, 0.06, 0.08, 0.05, 0.31, 0.16, 0.47, 0.19, 0.63, 0.08, 0.56, 0.19, 0.25, 0.56, 0.19, 0.66, 0.14, 0.31, 0.38, 0.77, 0.28, 0.88, 0.05, 0.19, 0.23, 0.23, 0.19, 0.25, 0.25, 0.44, 0.11, 0.19, 0.09, 0.31, 0.13, 0.47, 0.39, 0.75, 0.08, 0.31, 0.23, 0.28, 0.38, 0.25, 0.25, 0.25, 0.56, 0.14, 0.47, 0.19, 0.55, 0.09, 0.88, 0.11, 0.09, 0.38, 0.23, 0.28, 0.31, 0.39, 0.31, 0.31, 0.31, 0.19, 0.56, 0.56, 0.56, 0.23, 0.09, 0.09, 0.31, 0.66, 0.25, 0.77, 0.19, 0.23, 0.28, 0.38, 0.31, 0.56, 0.14, 0.88, 0.16, 0.47, 0.47, 0.47, 0.55, 0.75, 0.5, 0.19, 0.13, 0.55, 0.33, 0.28, 0.11, 0.5, 0.31, 0.39, 0.28, 0.28, 0.16, 0.09, 0.06, 0.56, 0.25, 0.25, 0.11, 0.55, 0.08, 0.16, 0.39, 0.39, 0.39, 0.06, 0.25, 0.88, 0.14, 0.22, 0.47, 0.63, 0.55, 0.75, 0.63, 0.63, 0.56, 0.47, 0.77, 0.47, 0.75, 0.75, 0.19, 0.19, 0.19, 0.19, 0.66, 0.14, 0.23, 0.28, 0.77, 0.33, 0.28, 0.22, 0.47, 0.11, 0.55, 0.23, 0.88, 0.25, 0.38, 0.23, 0.23, 0.31, 0.66, 0.25, 0.77, 0.14, 0.38, 0.33, 0.56, 0.22, 0.88, 0.16, 0.28, 0.11, 0.39, 0.28, 0.44, 0.44, 0.31, 0.55, 0.63, 0.31, 0.55, 0.39, 0.39, 0.38, 0.38, 0.13, 0.44, 0.31, 0.47, 0.19, 0.63, 0.28, 0.28, 0.28, 0.28, 0.19, 0.19, 0.09, 0.5, 0.14, 0.13, 0.13, 0.75, 0.23, 0.23, 0.06, 0.31, 0.19, 0.19, 0.19, 0.31, 0.5, 0.77, 0.44, 0.23, 0.14, 0.25, 0.13, 0.31, 0.39, 0.28, 0.28, 0.14, 0.56, 0.19, 0.66, 0.33, 0.77, 0.22, 0.88, 0.11, 0.31, 0.13, 0.08, 0.31, 0.31, 0.19, 0.47, 0.08, 0.63, 0.55, 0.75, 0.31, 0.19, 0.38, 0.38, 0.31, 0.33, 0.22, 0.25, 0.06, 0.47, 0.05, 0.31, 0.25, 0.44, 0.39, 0.25, 0.38, 0.31, 0.31, 0.31, 0.16, 0.5, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.23, 0.13, 0.16, 0.75, 0.09, 0.23, 0.19, 0.23, 0.14, 0.66, 0.33, 0.77, 0.22, 0.28, 0.28, 0.47, 0.11, 0.55, 0.23, 0.88, 0.25, 0.25, 0.25, 0.25, 0.25, 0.31, 0.31, 0.31, 0.31, 0.31, 0.31, 0.23, 0.28, 0.47, 0.25, 0.25, 0.25, 0.09, 0.14, 0.33, 0.16, 0.56, 0.11, 0.28, 0.23, 0.13, 0.06, 0.88, 0.28, 0.28, 0.19, 0.25, 0.19, 0.39, 0.38, 0.38, 0.28, 0.31, 0.47, 0.25, 0.31, 0.13, 0.56, 0.39, 0.88, 0.28, 0.19, 0.55, 0.44, 0.5, 0.23, 0.14, 0.25, 0.25, 0.13, 0.13, 0.13, 0.13, 0.55, 0.38, 0.09, 0.09, 0.09, 0.11, 0.38, 0.31, 0.23, 0.28, 0.28, 0.25, 0.25, 0.25, 0.47, 0.14, 0.38, 0.19, 0.33, 0.16, 0.25, 0.38, 0.39, 0.25, 0.09, 0.39, 0.39, 0.19, 0.16, 0.16, 0.44, 0.05, 0.56, 0.44, 0.44, 0.06, 0.09, 0.44, 0.55, 0.09, 0.38, 0.38, 0.38, 0.38, 0.19, 0.09, 0.66, 0.19, 0.75, 0.03, 0.23, 0.06, 0.5, 0.14, 0.25, 0.25, 0.25, 0.13, 0.13, 0.05, 0.13, 0.06, 0.38, 0.09, 0.14, 0.39, 0.13, 0.33, 0.63, 0.06, 0.08, 0.19, 0.25, 0.28, 0.31, 0.66, 0.25, 0.77, 0.14, 0.38, 0.28, 0.56, 0.13, 0.88, 0.16, 0.28, 0.11, 0.39, 0.39, 0.39, 0.39, 0.39, 0.09, 0.31, 0.39, 0.28, 0.28, 0.16, 0.09, 0.06, 0.56, 0.11, 0.55, 0.08, 0.16, 0.09, 0.38, 0.14, 0.88, 0.38, 0.08, 0.09, 0.23, 0.25, 0.25, 0.25, 0.22, 0.13, 0.28, 0.31, 0.13, 0.03, 0.08, 0.09, 0.38, 0.05, 0.09, 0.13, 0.44, 0.13, 0.66, 0.75, 0.63, 0.13, 0.63, 0.33, 0.33, 0.33, 0.13, 0.13, 0.19, 0.23, 0.22, 0.44, 0.33, 0.19, 0.02, 0.02, 0.13, 0.13, 0.13, 0.03, 0.25, 0.56, 0.19, 0.23, 0.31, 0.66, 0.14, 0.38, 0.31, 0.77, 0.16, 0.16, 0.16, 0.88, 0.33, 0.09, 0.16, 0.16, 0.16, 0.09, 0.11, 0.44, 0.03, 0.33, 0.14, 0.31, 0.39, 0.28, 0.28, 0.16, 0.09, 0.06, 0.56, 0.11, 0.55, 0.28, 0.28, 0.19, 0.44, 0.13, 0.88, 0.19, 0.56, 0.13, 0.63, 0.14, 0.23, 0.06, 0.19, 0.38, 0.66, 0.25, 0.77, 0.13, 0.25, 0.38, 0.56, 0.39, 0.39, 0.19, 0.55, 0.33, 0.28, 0.44, 0.25, 0.19, 0.44, 0.44, 0.16, 0.23, 0.28, 0.09, 0.75, 0.09, 0.19, 0.19, 0.75, 0.75, 0.75, 0.25, 0.25, 0.47, 0.66, 0.38, 0.75, 0.47, 0.66, 0.25, 0.56, 0.19, 0.47, 0.14, 0.13, 0.23, 0.19, 0.19, 0.22, 0.28, 0.88, 0.11, 0.14, 0.14, 0.38, 0.09, 0.28, 0.31, 0.39, 0.03, 0.38, 0.55, 0.75, 0.5, 0.44, 0.13, 0.55, 0.28, 0.44, 0.19, 0.63, 0.06, 0.56, 0.09, 0.25, 0.09, 0.14, 0.25, 0.39, 0.16, 0.16, 0.16, 0.38, 0.25, 0.38, 0.09, 0.47, 0.14, 0.23, 0.05, 0.47, 0.11, 0.13, 0.13, 0.13, 0.31, 0.56, 0.13, 0.47, 0.38, 0.25, 0.19, 0.47, 0.13, 0.63, 0.09, 0.06, 0.05, 0.5, 0.23, 0.13, 0.16, 0.38, 0.38, 0.38, 0.09, 0.11, 0.14, 0.75, 0.19, 0.55, 0.23, 0.66, 0.09, 0.39, 0.03, 0.06, 0.09, 0.44, 0.31, 0.23, 0.28, 0.47, 0.25, 0.25, 0.25, 0.28, 0.14, 0.33, 0.23, 0.09, 0.19, 0.56, 0.11, 0.39, 0.38, 0.23, 0.16, 0.66, 0.09, 0.23, 0.23, 0.38, 0.38, 0.88, 0.08, 0.16, 0.39, 0.39, 0.66, 0.66, 0.39, 0.19, 0.23, 0.23, 0.23, 0.13, 0.31, 0.11, 0.19, 0.14, 0.14, 0.44, 0.44, 0.44, 0.06, 0.25, 0.19, 0.75, 0.13, 0.55, 0.19, 0.13, 0.33, 0.22, 0.09, 0.08, 0.08, 0.28, 0.39, 0.06, 0.23, 0.63, 0.06, 0.06, 0.23, 0.63, 0.31, 0.11, 0.38, 0.44, 0.19, 0.06, 0.05, 0.16, 0.16, 0.19, 0.19, 0.06, 0.09, 0.56, 0.5, 0.19, 0.56, 0.33, 0.66, 0.22, 0.77, 0.14, 0.88, 0.25, 0.28, 0.31, 0.38, 0.16, 0.39, 0.11, 0.09, 0.38, 0.63, 0.23, 0.55, 0.31, 0.23, 0.05, 0.19, 0.05, 0.63, 0.19, 0.47, 0.47, 0.47, 0.31, 0.75, 0.13, 0.31, 0.31, 0.66, 0.08, 0.75, 0.22, 0.44, 0.31, 0.23, 0.28, 0.38, 0.25, 0.25, 0.25, 0.56, 0.14, 0.47, 0.23, 0.09, 0.38, 0.33, 0.28, 0.16, 0.19, 0.22, 0.11, 0.44, 0.05, 0.55, 0.08, 0.23, 0.09, 0.31, 0.23, 0.23, 0.31, 0.88, 0.23, 0.23, 0.13, 0.31, 0.38, 0.66, 0.5, 0.77, 0.47, 0.63, 0.66, 0.66, 0.55, 0.38, 0.56, 0.56, 0.31, 0.47, 0.47, 0.31, 0.23, 0.47, 0.11, 0.75, 0.09, 0.5, 0.19, 0.13, 0.23, 0.55, 0.31, 0.47, 0.23, 0.55, 0.38, 0.77, 0.14, 0.75, 0.11, 0.39, 0.23, 0.38, 0.38, 0.31, 0.08, 0.33, 0.75, 0.63, 0.23, 0.75, 0.23, 0.23, 0.23, 0.09, 0.09, 0.03, 0.13, 0.55, 0.31, 0.05, 0.39, 0.38, 0.16, 0.09, 0.25, 0.63, 0.22, 0.5, 0.16, 0.03, 0.25, 0.55, 0.19, 0.75, 0.44, 0.55, 0.31, 0.39, 0.28, 0.28, 0.16, 0.09, 0.06, 0.56, 0.11, 0.55, 0.28, 0.28, 0.19, 0.44, 0.13, 0.88, 0.19, 0.56, 0.5, 0.23, 0.47, 0.47, 0.47, 0.44, 0.44, 1, 0.38, 0.88, 0.23, 0.66, 0.66, 0.47, 0.31, 0.66, 0.13, 0.88, 0.44, 0.75, 0.38, 0.38, 0.38, 0.63, 0.13, 0.23, 0.47, 0.44, 0.44, 0.44, 0.08, 0.75, 0.14, 0.38, 0.28, 0.25, 0.55, 0.11, 0.31, 0.56, 0.39, 0.31, 0.14, 0.47, 0.28, 0.38, 0.25, 0.39, 0.39, 0.14, 0.14, 0.44, 0.38, 0.55, 0.19, 0.39, 0.39, 0.56, 0.16, 0.44, 0.11, 0.28, 0.38, 0.88, 0.56, 0.56, 0.08, 0.66, 0.19, 0.5, 0.39, 0.31, 0.23, 0.5, 0.08, 0.19, 0.33, 1, 0.5, 0.88, 0.25, 0.5, 0.16, 0.44, 0.33, 0.39, 0.39, 0.31, 0.38, 0.55, 0.19, 0.22, 0.19, 0.77, 0.14, 0.75, 0.63, 0.63, 0.88, 0.77, 0.31, 0.31, 0.31, 0.88, 0.56, 0.05, 0.13, 0.88, 0.31, 0.88, 0.13, 0.88, 0.28, 0.88, 0.25, 0.56, 0.19, 0.66, 0.14, 0.77, 0.31, 0.38, 0.16, 0.88, 0.28, 0.39, 0.23, 0.28, 0.31, 0.55, 0.13, 0.23, 0.44, 0.63, 0.55, 0.38, 0.11, 0.09, 0.06, 0.25, 0.44, 0.44, 0.44, 0.19, 0.03, 1, 0.16, 0.47, 0.56, 0.56, 0.38, 0.63, 0.28, 0.88, 0.55, 0.56, 0.47, 0.66, 0.13, 0.75, 0.09, 0.38, 0.38, 0.38, 0.19, 0.55, 0.09, 0.88, 0.44, 0.75, 0.22, 0.22, 0.33, 0.55, 0.38, 0.56, 0.11, 0.63, 0.19, 0.28, 0.56, 0.19, 0.66, 0.33, 0.77, 0.22, 0.88, 0.11, 0.23, 0.14, 0.31, 0.19, 0.28, 0.31, 0.31, 0.13, 0.14, 0.14, 0.44, 0.05, 0.19, 0.75, 0.22, 0.77, 0.77, 0.38, 0.5, 0.39, 0.39, 0.39, 0.56, 0.23, 0.22, 0.22, 0.39, 0.06, 0.66, 0.28, 0.19, 0.19, 0.28, 0.08, 0.19, 0.19, 0.19, 0.03, 0.38, 0.05, 0.28, 0.13, 0.47, 0.5, 0.63, 0.06, 0.55, 0.13, 0.33, 0.09, 0.38, 0.19, 0.31, 0.39, 0.28, 0.28, 0.16, 0.09, 0.06, 0.56, 0.11, 0.55, 0.28, 0.28, 0.19, 0.44, 0.13, 0.88, 0.19, 0.56, 0.5, 0.23, 0.28, 0.63, 0.33, 1, 0.38, 0.38, 0.38, 0.16, 0.23, 0.38, 0.47, 0.47, 0.47, 0.47, 0.38, 0.38, 0.19, 0.33, 0.33, 0.88, 0.23, 0.75, 0.05, 0.44, 0.09, 0.39, 0.16, 0.66, 0.13, 0.75, 0.25, 0.5, 0.39, 0.39, 0.44, 0.55, 0.5, 0.23, 0.47, 0.47, 0.47, 0.25, 0.09, 0.19, 0.13, 0.19, 0.19, 0.23, 0.23, 0.08, 0.13, 0.55, 0.05, 0.38, 0.05, 0.28, 0.03, 0.13, 0.06, 0.44, 0.05, 0.19, 0.19, 0.33, 0.39, 0.39, 0.44, 0.28, 0.31, 0.44, 0.66, 0.33, 0.33, 0.5, 0.23, 0.66, 0.44, 0.63, 0.38, 0.33, 0.31, 0.28, 0.39, 0.44, 0.38, 0.44, 0.47, 0.31, 0.09, 0.25, 0.08, 0.38, 0.44, 0.31, 0.23, 0.28, 0.28, 0.14, 0.56, 0.25, 0.25, 0.25, 0.47, 0.16, 0.13, 0.05, 0.14, 0.14, 0.31, 0.31, 0.31, 0.31, 0.31, 0.19, 0.55, 0.16, 0.16, 0.16, 0.47, 0.14, 0.38, 0.23, 0.25, 0.11, 0.25, 0.25, 0.25, 0.19, 0.56, 0.06, 0.09, 0.38, 0.13, 0.38, 0.09, 0.13, 0.63, 0.09, 0.38, 0.38, 0.08, 0.08, 0.08, 0.16, 0.19, 0.55, 0.5, 0.33, 0.44, 0.63, 0.11, 0.25, 0.19, 0.44, 0.23, 0.19, 0.19, 0.88, 0.66, 0.38, 0.08, 0.09, 0.09, 0.11, 0.11, 0.23, 0.06, 0.25, 0.13, 0.08, 0.19, 0.31, 0.19, 0.33, 0.16, 0.44, 0.55, 0.38, 0.33, 0.56, 0.31, 0.5, 0.22, 0.38, 0.63, 0.55, 0.44, 0.66, 0.38, 0.77, 0.39, 0.66, 0.22, 0.25, 0.31, 0.38, 0.47, 0.25, 0.31, 0.38, 0.47, 0.25, 0.31, 0.25, 0.56, 0.19, 0.47, 0.14, 0.13, 0.23, 0.88, 0.19, 0.23, 0.28, 0.31, 0.11, 0.28, 0.31, 0.31, 0.23, 0.14, 0.14, 0.44, 0.16, 0.55, 0.38, 0.63, 0.09, 0.5, 0.05, 0.44, 0.06, 0.5, 0.08, 0.31, 0.19, 0.31, 0.23, 0.28, 0.47, 0.25, 0.25, 0.25, 0.28, 0.14, 0.33, 0.23, 0.09, 0.19, 0.56, 0.11, 0.39, 0.38, 0.23, 0.16, 0.38, 0.38, 0.66, 0.09, 0.23, 0.23, 0.88, 0.39, 0.39, 0.66, 0.66, 0.39, 0.19, 0.23, 0.23, 0.23, 0.19, 0.31, 0.22, 0.56, 0.56, 0.06, 0.38, 0.25, 0.16, 0.06, 0.28, 0.13, 0.08, 0.06, 0.77, 0.23, 0.47, 0.14, 0.25, 0.19, 0.63, 0.38, 0.38, 0.05, 0.39, 0.39, 0.39, 0.09, 0.31, 0.25, 0.19, 0.16, 0.13, 0.13, 0.13, 0.25, 0.31, 0.23, 0.28, 0.28, 0.25, 0.25, 0.25, 0.56, 0.14, 0.47, 0.16, 0.13, 0.05, 0.14, 0.14, 0.31, 0.31, 0.31, 0.13, 0.88, 0.19, 0.56, 0.14, 0.31, 0.31, 0.31, 0.33, 0.66, 0.22, 0.14, 0.14, 0.77, 0.03, 0.44, 0.09, 0.25, 0.19, 0.23, 0.28, 0.88, 0.11, 0.33, 0.06, 0.06, 0.06, 0.56, 0.14, 0.44, 0.39, 0.38, 0.19, 0.28, 0.33, 0.33, 0.28, 0.63, 0.03, 0.38, 0.06, 0.47, 0.08, 0.77, 0.22, 0.56, 0.38, 0.75, 0.19, 0.55, 0.28, 0.47, 0.55, 0.55, 0.5, 0.56, 0.55, 0.55, 0.13, 0.88, 0.44, 0.44, 0.44, 0.56, 0.75, 0.55, 0.38, 0.56, 0.28, 0.77, 1, 0.88, 0.13, 0.09, 0.19, 0.39, 0.88, 0.77, 0.77, 0.77, 0.23, 0.44, 0.16, 0.56, 0.03, 0.88, 0.22, 0.77, 0.19, 0.88, 0.19, 0.44, 0.16, 0.39, 0.03, 0.88, 0.25, 0.56, 0.19, 0.47, 0.14, 0.13, 0.09, 0.23, 0.23, 0.88, 0.38, 0.09, 0.05, 0.14, 0.14, 0.31, 0.25, 0.23, 0.06, 0.31, 0.13, 0.06, 0.31, 0.31, 0.23, 0.19, 0.31, 0.56, 0.39, 0.31, 0.25, 0.38, 0.28, 0.44, 0.16, 0.47, 0.19, 0.19, 0.38, 0.38, 0.11, 0.55, 0.14, 0.88, 0.09, 0.28, 0.23, 0.31, 0.23, 0.38, 0.38, 0.28, 0.28, 0.56, 0.05, 0.55, 0.44, 0.75, 0.22, 0.19, 0.06, 0.25, 0.19, 0.19, 0.38, 0.44, 0.13, 0.66, 0.19, 0.38, 0.09, 0.11, 0.09, 0.09, 0.09, 0.16, 0.55, 0.55, 0.55, 0.5, 0.28, 0.28, 0.28, 0.11, 0.09, 0.38, 0.19, 0.28, 0.09, 0.25, 0.19, 0.5, 0.14, 0.66, 0.16, 0.47, 0.38, 0.13, 0.47, 0.47, 0.06, 0.08, 0.06, 0.77, 0.22, 0.66, 0.5, 0.38, 0.31, 0.39, 0.28, 0.28, 0.16, 0.09, 0.06, 0.56, 0.11, 0.55, 0.28, 0.28, 0.14, 0.44, 0.38, 0.63, 0.44, 0.66, 0.39, 0.31, 0.66, 0.14, 0.14, 0.06, 0.06, 0.66, 0.22, 0.28, 0.31, 0.33, 0.44, 0.22, 0.28, 0.09, 0.47, 0.06, 0.44, 0.11, 0.08, 0.05, 0.56, 0.19, 0.55, 0.13, 0.88, 0.08, 0.19, 0.03, 0.63, 0.31, 0.56, 0.39, 0.55, 0.13, 0.33, 0.5, 0.28, 0.28, 0.47, 0.56, 0.56, 0.25, 0.23, 0.23, 0.23, 0.05, 0.14, 0.16, 0.63, 0.13, 0.13, 0.13, 0.16, 0.23, 0.56, 0.06, 0.19, 0.23, 0.28, 0.08, 0.44, 0.28, 0.28, 0.38, 0.16, 0.38, 0.14, 0.47, 0.03, 0.63, 0.63, 0.44, 0.31, 0.28, 0.14, 0.16, 0.13, 0.38, 0.03, 0.22, 0.75, 0.13, 0.06, 0.09, 0.5, 0.39, 0.09, 0.02, 0.05, 0.31, 0.56, 0.39, 0.31, 0.25, 0.38, 0.28, 0.44, 0.16, 0.47, 0.11, 0.55, 0.19, 0.19, 0.38, 0.38, 0.14, 0.88, 0.38, 0.28, 0.31, 0.31, 0.31, 0.28, 0.28, 0.19, 0.31, 0.47, 0.25, 0.31, 0.14, 0.13, 0.39, 0.23, 0.05, 0.14, 0.14, 0.33, 0.28, 0.55, 0.06, 0.44, 0.16, 0.28, 0.11, 0.19, 0.08, 0.75, 0.19, 0.08, 0.13, 0.19, 0.09, 0.28, 0.38, 0.44, 0.05, 0.06, 0.28, 0.28, 0.33, 0.16, 0.38, 0.25, 0.23, 0.22, 0.25, 0.31, 0.19, 0.28, 0.28, 0.56, 0.31, 0.31, 0.14, 0.28, 0.38, 0.47, 0.23, 0.55, 0.38, 0.88, 0.19, 0.44, 0.11, 0.38, 0.05, 0.19, 0.16, 0.5, 0.06, 0.31, 0.23, 0.28, 0.38, 0.16, 0.28, 0.14, 0.56, 0.19, 0.39, 0.13, 0.55, 0.09, 0.88, 0.33, 0.09, 0.28, 0.28, 0.11, 0.63, 0.38, 0.75, 0.25, 0.25, 0.09, 0.31, 0.16, 0.22, 0.23, 0.75, 0.28, 0.08, 0.44, 0.44, 0.44, 0.47, 0.03, 0.06, 0.19, 0.08, 0.38, 0.38, 0.38, 0.5, 0.28, 0.19, 0.19, 0.03, 0.03, 0.25, 0.13, 0.5, 0.47, 0.14, 0.55, 0.55, 0.55, 0.19, 0.38, 0.56, 0.25, 0.55, 0.55, 0.88, 0.55, 0.38, 0.38, 0.38, 0.11, 0.55, 0.55, 0.33, 0.13, 0.28, 0.25, 0.19, 0.13, 0.38, 0.55, 0.28, 0.25, 0.47, 0.5, 0.66, 0.06, 0.44, 0.22, 0.38, 0.13, 0.09, 0.11, 0.28, 0.25, 0.38, 0.33, 0.75, 0.22, 0.13, 0.13, 0.75, 0.25, 0.55, 0.33, 0.66, 0.19, 0.88, 0.22, 0.63, 0.06, 0.88, 0.11, 0.88, 0.22, 0.47, 0.77, 0.75, 0.55, 0.06, 0.25, 0.38, 0.33, 0.13, 0.11, 0.25, 0.19, 0.55, 0.25, 0.25, 0.08, 0.19, 0.19, 0.19, 0.23, 0.03, 0.19, 0.09, 0.25, 0.47, 0.23, 0.38, 0.14, 0.47, 0.39, 0.33, 0.23, 0.44, 0.33, 0.31, 0.25, 0.47, 0.66, 0.55, 0.77, 0.47, 0.11, 0.23, 0.23, 0.39, 0.06, 0.25, 0.56, 0.19, 0.47, 0.28, 0.19, 0.33, 0.22, 0.22, 0.55, 0.14, 0.31, 0.13, 0.31, 0.31, 0.31, 0.11, 0.88, 0.39, 0.44, 0.19, 0.56, 0.13, 0.28, 0.05, 0.63, 0.38, 0.75, 0.31, 0.31, 0.39, 0.56, 0.09, 0.47, 0.16, 0.23, 0.31, 0.31, 0.47, 0.47, 0.06, 0.55, 0.23, 0.38, 0.44, 0.25, 0.38, 0.38, 0.75, 0.75, 0.25, 0.56, 0.19, 0.44, 0.06, 0.63, 0.05, 0.63, 0.05, 0.63, 0.33, 0.16, 0.11, 0.63, 0.38, 0.5, 0.13, 0.38, 0.66, 0.44, 0.75, 0.22, 0.66, 0.38, 0.75, 0.22, 0.66, 0.31, 0.23, 0.14, 0.38, 0.38, 0.28, 0.28, 0.56, 0.33, 0.66, 0.22, 0.77, 0.11, 0.88, 0.19, 0.25, 0.38, 0.16, 0.44, 0.13, 0.16, 0.63, 0.47, 0.19, 0.08, 0.31, 0.31, 0.31, 0.55, 0.39, 0.5, 0.75, 0.66, 0.66, 0.75, 0.75, 0.31, 0.55, 0.19, 0.77, 0.23, 0.25, 0.33, 0.56, 0.09, 0.47, 0.14, 0.14, 0.14, 0.31, 0.31, 0.16, 0.23, 0.14, 0.14, 0.14, 0.19, 0.19, 0.16, 0.23, 0.13, 0.66, 0.19, 0.19, 0.19, 0.25, 0.09, 0.77, 0.31, 0.63, 0.63, 0.63, 0.19, 0.23, 0.22, 0.56, 0.25, 0.66, 0.28, 0.77, 0.31, 0.25, 0.19, 0.39, 0.28, 0.63, 0.23, 0.38, 0.25, 0.16, 0.09, 0.63, 0.22, 0.75, 0.47, 0.63, 0.44, 0.13, 0.19, 0.28, 0.19, 0.31, 0.47, 0.63, 0.06, 0.5, 0.13, 0.13, 0.13, 0.22, 0.06, 0.38, 0.38, 0.38, 0.08, 0.44, 0.09, 0.33, 0.11, 0.22, 0.13, 0.11, 1, 0.22, 0.77, 0.09, 0.39, 0.11, 0.16, 0.19, 0.28, 0.28, 0.47, 0.23, 0.38, 0.38, 0.31, 0.39, 0.28, 0.28, 0.16, 0.09, 0.06, 0.38, 0.11, 0.44, 0.38, 0.63, 0.14, 0.56, 0.08, 0.55, 0.19, 0.44, 0.13, 0.55, 0.28, 0.28, 0.25, 0.44, 0.44, 0.44, 0.09, 0.66, 0.39, 0.39, 0.39, 0.39, 0.28, 0.63, 0.23, 0.19, 0.47, 0.28, 0.28, 0.47, 0.47, 0.38, 0.22, 0.5, 0.38, 0.63, 0.39, 0.56, 0.08, 0.47, 0.23, 0.88, 0.31, 0.39, 0.28, 0.28, 0.16, 0.09, 0.06, 0.56, 0.11, 0.55, 0.08, 0.38, 0.14, 0.44, 0.25, 0.56, 0.23, 0.88, 0.13, 0.66, 0.75, 0.63, 0.28, 0.28, 0.19, 0.19, 0.08, 0.44, 0.38, 0.55, 0.13, 1, 0.06, 0.56, 0.25, 0.66, 0.09, 0.47, 0.28, 0.38, 0.55, 0.75, 0.5, 0.25, 0.25, 0.31, 0.22, 0.55, 0.19, 0.77, 0.23, 0.47, 0.05, 0.38, 0.47, 0.47, 0.31, 0.08, 0.08, 0.31, 0.14, 0.38, 0.33, 0.33, 0.33, 0.16, 0.44, 0.38, 0.44, 0.05, 0.25, 0.09, 0.06, 0.14, 0.08, 0.16, 0.31, 0.25, 0.11, 0.09, 0.38, 0.31, 0.23, 0.28, 0.38, 0.25, 0.25, 0.25, 0.56, 0.14, 0.09, 0.16, 0.39, 0.09, 0.55, 0.55, 0.44, 0.06, 0.19, 0.19, 0.22, 0.16, 0.88, 0.11, 0.33, 0.06, 0.38, 0.13, 0.75, 0.56, 0.56, 0.09, 0.75, 0.09, 0.28, 0.28, 0.16, 0.23, 0.19, 0.13, 0.06, 0.06, 0.22, 0.13, 0.5, 0.08, 0.25, 0.14, 0.11, 0.19, 0.63, 0.06, 0.55, 0.28, 0.28, 0.09, 0.33, 0.31, 0.5, 0.33, 0.33, 0.31, 0.31, 0.31, 0.5, 0.03, 0.75, 0.13, 0.55, 0.44, 0.13, 0.06, 0.08, 0.02, 0.31, 0.23, 0.31, 0.31, 0.13, 0.14, 0.03, 0.03, 0.38, 0.22, 0.28, 0.28, 0.16, 0.31, 0.5, 0.16, 0.19, 0.05, 0.11, 0.38, 0.66, 0.23, 0.16, 0.19, 0.44, 0.31, 0.13, 0.13, 0.47, 0.47, 0.47, 0.13, 0.25, 0.56, 0.19, 0.47, 0.28, 0.19, 0.33, 0.22, 0.22, 0.13, 0.13, 0.55, 0.14, 0.88, 0.11, 0.31, 0.31, 0.31, 0.09, 0.44, 0.06, 0.23, 0.23, 0.23, 0.38, 0.38, 0.31, 0.31, 0.55, 0.55, 0.31, 0.31, 0.55, 0.47, 0.23, 0.31, 0.06, 0.5, 0.08, 0.38, 0.19, 0.19, 0.09, 0.23, 0.11, 0.38, 0.13, 0.31, 0.33, 0.33, 0.33, 0.75, 0.16, 0.56, 0.05, 0.25, 0.38, 0.31, 0.38, 0.38, 0.38, 0.88, 0.19, 0.31, 0.22, 0.14, 0.23, 0.16, 0.25, 0.55, 0.33, 0.25, 0.25, 0.56, 0.19, 0.66, 0.14, 0.31, 0.38, 0.77, 0.28, 0.88, 0.05, 0.19, 0.23, 0.47, 0.55, 0.31, 0.31, 0.75, 0.31, 0.55, 0.55, 0.31, 0.19, 0.19, 0.09, 0.28, 0.31, 0.08, 0.11, 0.44, 0.23, 0.09, 0.09, 0.5, 0.06, 0.47, 0.19, 0.19, 0.16, 0.28, 0.14, 0.16, 0.33, 0.38, 0.08, 0.25, 0.09, 0.09, 0.09, 0.13, 0.16, 0.56, 0.28, 0.28, 0.05, 0.38, 0.09, 0.77, 0.08, 1, 0.5, 0.28, 0.05, 0.13, 0.09, 0.09, 0.19, 0.03, 0.13, 0.11, 0.19, 0.39, 0.06, 0.06, 0.06, 0.06, 0.25, 0.38, 0.22, 0.19, 0.09, 0.47, 0.23, 0.03, 0.63, 0.23, 0.09, 0.39, 0.66, 0.66, 0.09, 0.56, 0.08, 0.31, 0.09, 0.39, 0.23, 0.56, 0.09, 0.55, 0.22, 0.56, 0.09, 0.31, 0.23, 0.28, 0.38, 0.25, 0.25, 0.25, 0.56, 0.14, 0.09, 0.16, 0.39, 0.09, 0.55, 0.11, 0.88, 0.55, 0.47, 0.38, 0.19, 0.13, 0.38, 0.38, 0.28, 0.13, 0.5, 0.31, 0.31, 0.31, 0.39, 0.19, 0.33, 0.05, 0.66, 0.23, 0.63, 0.19, 0.44, 0.11, 0.5, 0.06, 0.39, 0.03, 0.44, 0.25, 0.39, 0.13, 0.08, 0.05, 0.13, 0.13, 0.66, 0.16, 0.38, 0.03, 0.75, 0.13, 0.5, 0.14, 0.19, 0.25, 0.25, 0.25, 0.19, 0.03, 0.16, 0.09, 0.13, 0.14, 0.06, 0.06, 0.06, 0.03, 0.19, 0.06, 0.39, 0.16, 0.38, 0.09, 0.13, 0.16, 0.38, 0.31, 0.47, 0.19, 0.38, 0.25, 0.56, 0.19, 0.47, 0.14, 0.13, 0.23, 0.23, 0.19, 0.31, 0.28, 0.88, 0.11, 0.28, 0.05, 0.14, 0.14, 0.19, 0.19, 0.33, 0.16, 0.44, 0.06, 0.19, 0.08, 0.08, 0.19, 0.28, 0.31, 0.75, 0.03, 0.5, 0.09, 0.25, 0.25, 0.38, 0.06, 0.22, 0.16, 0.19, 0.05, 0.09, 0.39, 0.16, 0.16, 0.16, 0.19, 0.19, 0.14, 0.13, 0.09, 0.63, 0.44, 0.44, 0.33, 0.56, 0.06, 0.33, 0.08, 0.31, 0.23, 0.28, 0.47, 0.25, 0.25, 0.25, 0.56, 0.14, 0.38, 0.19, 0.28, 0.23, 0.55, 0.16, 0.88, 0.09, 0.44, 0.05, 0.25, 0.25, 0.08, 0.28, 0.38, 0.44, 0.16, 0.39, 0.39, 0.39, 0.33, 0.31, 0.31, 0.55, 0.63, 0.23, 0.38, 0.03, 0.38, 0.23, 0.28, 0.25, 0.47, 0.09, 0.31, 0.55, 0.63, 0.31, 0.31, 0.47, 0.47, 0.44, 0.33, 0.66, 0.38, 0.14, 0.09, 0.55, 0.39, 0.09, 0.55, 0.55, 0.38, 0.39, 0.66, 0.38, 0.13, 0.31, 0.16, 0.47, 0.66, 0.39, 0.14, 0.31, 0.47, 0.13, 0.06, 0.06, 0.14, 0.33, 0.31, 0.22, 0.31, 0.39, 0.28, 0.28, 0.16, 0.09, 0.06, 0.56, 0.11, 0.55, 0.08, 0.16, 0.09, 0.38, 0.14, 0.88, 0.38, 0.44, 0.25, 0.56, 0.06, 0.08, 0.09, 0.19, 0.13, 0.19, 0.08, 0.44, 0.05, 0.05, 0.05, 0.28, 0.09, 0.22, 0.31, 0.31, 0.31, 0.31, 0.31, 0.33, 0.05, 0.38, 0.19, 0.19, 0.14, 0.28, 0.13, 0.31, 0.31, 0.55, 0.19, 0.56, 0.38, 0.31, 0.39, 0.39, 0.39, 0.5, 0.31, 0.75, 0.23, 0.31, 0.23, 0.28, 0.38, 0.25, 0.25, 0.25, 0.56, 0.14, 0.09, 0.55, 0.47, 0.38, 0.19, 0.13, 0.06, 0.09, 0.28, 0.03, 0.05, 0.56, 0.56, 0.16, 0.63, 0.11, 0.44, 0.13, 0.38, 0.28, 0.16, 0.08, 0.55, 0.38, 0.5, 0.44, 0.08, 0.06, 0.09, 0.09, 0.23, 0.05, 0.13, 0.16, 0.19, 0.38, 0.38, 0.47, 0.39, 0.08, 0.22, 0.28, 0.08, 0.33, 0.31, 0.03, 0.31, 0.31, 0.31, 0.31, 0.03, 0.5, 0.02, 0.22, 0.88, 0.33, 0.33, 0.33, 0.08, 0.13, 0.44, 0.11, 0.63, 0.09, 0.75, 0.19, 0.77, 0.63, 0.23, 0.44, 0.88, 0.28, 0.75, 0.31, 0.23, 0.28, 0.38, 0.25, 0.25, 0.25, 0.56, 0.14, 0.66, 0.23, 0.77, 0.28, 0.09, 0.19, 0.16, 0.09, 0.22, 0.13, 0.44, 0.06, 0.13, 0.31, 0.08, 0.75, 0.88, 0.05, 0.23, 0.77, 0.77, 0.56, 0.56, 0.5, 0.63, 0.16, 0.31, 0.31, 0.38, 0.25, 0.09, 0.09, 0.44, 0.03, 0.16, 0.16, 0.06, 0.13, 0.09, 0.19, 0.08, 0.06, 0.13, 0.09, 0.25, 0.38, 0.16, 0.16, 0.16, 0.44, 0.5, 0.23, 0.25, 0.66, 0.28, 0.77, 0.33, 0.23, 0.22, 0.25, 0.25, 0.28, 0.09, 0.38, 0.11, 0.47, 0.13, 0.44, 0.31, 0.38, 0.38, 0.38, 0.31, 0.75, 0.75, 0.75, 0.14, 0.88, 0.38, 0.47, 0.06, 0.31, 0.31, 0.47, 0.13, 0.5, 0.28, 0.47, 0.13, 0.66, 0.06, 0.55, 0.23, 0.77, 0.08, 0.31, 0.25, 0.38, 0.38, 0.5, 0.28, 0.66, 0.44, 0.38, 0.22, 0.56, 0.09, 0.16, 0.05, 0.08, 0.25, 0.25, 0.47, 0.47, 0.47, 0.47, 0.25, 0.13, 0.13, 0.13, 0.02, 0.33, 0.09, 0.14, 0.14, 0.25, 0.56, 0.19, 0.66, 0.14, 0.77, 0.31, 0.38, 0.28, 0.88, 0.16, 0.23, 0.31, 0.47, 0.11, 0.31, 0.31, 0.63, 0.09, 0.44, 0.38, 0.09, 0.06, 0.63, 0.55, 0.56, 0.13, 0.44, 0.38, 0.28, 0.28, 0.77, 0.08, 0.55, 0.44, 0.13, 0.13, 0.56, 0.06, 0.16, 0.09, 0.25, 0.38, 0.13, 0.06, 0.19, 0.25, 0.33, 0.25, 0.44, 0.23, 0.38, 0.05, 0.23, 0.06, 0.47, 0.23, 0.23, 0.25, 0.14, 0.28, 0.66, 0.33, 0.77, 0.22, 0.39, 0.11, 0.28, 0.19, 0.38, 0.19, 0.47, 0.14, 0.56, 0.03, 0.08, 0.05, 0.88, 0.13, 0.13, 0.13, 0.75, 0.16, 0.55, 0.23, 0.47, 0.06, 0.44, 0.38, 0.38, 0.13, 0.23, 0.02, 0.31, 0.13, 0.13, 0.09, 0.38, 0.23, 0.23, 0.09, 0.28, 0.56, 0.33, 0.66, 0.22, 0.77, 0.11, 0.88, 0.25, 0.38, 0.19, 0.28, 0.14, 0.44, 0.31, 0.08, 0.13, 0.23, 0.09, 0.44, 0.09, 0.38, 0.06, 0.22, 0.22, 0.39, 0.47, 0.47, 0.06, 0.28, 0.28, 0.5, 0.31, 0.13, 0.56, 0.56, 0.13, 0.77, 0.56, 0.56, 0.05, 0.28, 0.23, 0.47, 0.19, 0.66, 0.33, 0.77, 0.22, 0.23, 0.14, 0.28, 0.05, 0.47, 0.31, 0.55, 0.16, 0.88, 0.11, 0.38, 0.19, 0.19, 0.03, 0.22, 0.13, 0.44, 0.23, 0.25, 0.13, 0.28, 0.75, 0.47, 0.77, 0.77, 0.25, 0.25, 0.38, 0.5, 0.16, 0.31, 0.31, 0.39, 0.19, 0.56, 0.09, 0.75, 0.06, 0.66, 0.19, 1, 0.13, 0.77, 0.13, 0.38, 0.38, 0.66, 0.23, 0.47, 0.16, 0.55, 0.47, 0.38, 0.22, 0.16, 0.16, 0.39, 0.06, 0.55, 0.33, 0.47, 0.47, 0.16, 0.38, 0.22, 0.5, 0.63, 0.63, 0.63, 0.22, 0.16, 0.38, 0.63, 0.22, 0.16, 0.38, 0.63, 0.25, 0.31, 0.28, 0.56, 0.19, 0.28, 0.23, 0.47, 0.19, 0.44, 0.13, 0.38, 0.31, 0.31, 0.31, 0.31, 0.31, 0.13, 0.13, 0.13, 0.13, 0.88, 0.05, 0.23, 0.23, 0.33, 0.38, 0.23, 0.23, 0.23, 0.09, 0.19, 0.13, 0.09, 0.31, 0.25, 0.05, 0.22, 0.08, 0.31, 0.31, 0.22, 0.06, 0.33, 0.09, 0.38, 0.25, 0.75, 0.5, 0.55, 0.44, 0.44, 0.38, 0.56, 0.88, 0.66, 1, 0.38, 0.75, 0.55, 0.13, 0.39, 0.08, 0.22, 1, 0.47, 0.09, 0.25, 0.38, 0.44, 1, 0.47, 0.31, 0.23, 0.38, 0.66, 0.28, 0.77, 0.14, 0.38, 0.19, 0.47, 0.25, 0.25, 0.25, 0.09, 0.11, 0.28, 0.23, 0.55, 0.13, 0.31, 0.31, 0.31, 0.16, 0.88, 0.06, 0.47, 0.28, 0.25, 0.25, 0.25, 0.25, 0.38, 0.19, 0.63, 0.13, 0.33, 0.33, 0.63, 0.13, 0.16, 0.05, 0.47, 0.19, 0.25, 0.31, 0.77, 0.08, 0.31, 0.25, 0.28, 0.06, 0.22, 0.55, 0.28, 0.28, 0.08, 0.08, 0.31, 0.22, 0.19, 0.14, 0.75, 0.13, 0.28, 0.55, 0.08, 0.44, 0.44, 0.44, 0.13, 0.25, 0.31, 0.23, 0.38, 0.28, 0.28, 0.66, 0.16, 0.77, 0.11, 0.56, 0.14, 0.88, 0.28, 0.28, 0.19, 0.38, 0.08, 0.63, 0.09, 0.33, 0.06, 0.16, 0.06, 0.25, 0.19, 0.19, 0.13, 0.47, 0.14, 0.47, 0.33, 0.44, 0.23, 0.63, 0.28, 0.38, 0.08, 1, 0.06, 0.5, 0.22, 0.44, 0.39, 0.31, 0.39, 0.28, 0.28, 0.16, 0.09, 0.06, 0.56, 0.16, 0.55, 0.11, 0.16, 0.09, 0.38, 0.14, 0.88, 0.06, 0.08, 0.09, 0.23, 0.25, 0.33, 0.39, 0.39, 0.13, 0.5, 0.09, 0.22, 0.06, 0.63, 0.33, 0.56, 0.5, 0.66, 0.22, 0.28, 0.05, 0.38, 0.23, 0.47, 0.28, 0.44, 0.09, 0.5, 0.44, 0.44, 0.06, 0.75, 0.19, 0.63, 0.06, 0.09, 0.16, 0.16, 0.16, 0.06, 0.06, 0.44, 0.13, 0.03, 0.19, 0.47, 0.23, 0.19, 0.31, 0.39, 0.14, 0.56, 0.28, 0.28, 0.16, 0.13, 0.11, 0.88, 0.28, 0.28, 0.39, 0.14, 0.14, 0.31, 0.25, 0.38, 0.08, 0.56, 0.19, 0.66, 0.19, 0.38, 0.09, 0.47, 0.06, 0.23, 0.14, 0.44, 0.06, 0.19, 0.19, 0.63, 0.23, 0.23, 0.23, 0.63, 0.09, 0.23, 0.23, 0.5, 0.28, 0.28, 0.05, 0.47, 0.23, 0.75, 0.31, 0.66, 0.19, 0.55, 0.38, 0.47, 0.13, 0.31, 0.39, 0.28, 0.28, 0.16, 0.09, 0.06, 0.56, 0.11, 0.38, 0.14, 0.44, 0.38, 0.63, 0.19, 0.55, 0.08, 0.44, 0.13, 0.23, 0.09, 0.47, 0.09, 0.55, 0.55, 0.55, 0.33, 0.28, 0.28, 0.66, 0.09, 0.56, 0.16, 0.88, 0.23, 0.77, 0.31, 0.47, 0.47, 0.47, 0.25, 0.75, 0.44, 0.75, 0.39, 0.39, 0.25, 0.28, 0.19, 0.5, 0.31, 0.25, 0.56, 0.19, 0.23, 0.23, 0.66, 0.14, 0.77, 0.28, 0.88, 0.16, 0.25, 0.25, 0.28, 0.11, 0.25, 0.25, 0.31, 0.38, 0.19, 0.19, 0.56, 0.14, 0.66, 0.25, 0.31, 0.28, 0.77, 0.06, 0.44, 0.09, 0.28, 0.23, 0.47, 0.39, 0.19, 0.19, 0.22, 0.11, 0.28, 0.47, 0.47, 0.47, 0.55, 0.38, 0.5, 0.47, 0.55, 0.38, 0.5, 0.47, 0.31, 0.23, 0.28, 0.38, 0.16, 0.44, 0.44, 0.44, 0.19, 0.28, 0.11, 0.66, 0.25, 0.25, 0.25, 0.77, 0.23, 0.39, 0.09, 0.75, 0.28, 0.47, 0.14, 0.31, 0.31, 0.47, 0.47, 0.47, 0.33, 0.63, 0.09, 0.47, 0.16, 0.5, 0.38, 0.16, 0.38, 0.28, 0.06, 0.19, 0.19, 0.5, 0.25, 0.25, 0.25, 0.25, 0.08, 0.66, 0.13, 0.31, 0.23, 0.28, 0.28, 0.16, 0.66, 0.11, 0.77, 0.14, 0.56, 0.08, 0.88, 0.38, 0.09, 0.09, 0.19, 0.25, 0.25, 0.25, 0.31, 0.39, 0.63, 0.14, 0.33, 0.09, 0.47, 0.06, 0.16, 0.33, 0.22, 0.22, 0.44, 0.13, 0.56, 0.06, 0.5, 0.56, 0.31, 0.39, 0.28, 0.28, 0.16, 0.56, 0.16, 0.55, 0.14, 0.38, 0.25, 0.44, 0.11, 0.88, 0.13, 0.56, 0.31, 0.55, 0.19, 0.28, 0.19, 0.08, 0.09, 0.66, 0.05, 0.23, 0.06, 0.77, 0.33, 1, 0.08, 0.56, 0.5, 0.88, 0.22, 0.06, 0.38, 0.56, 0.23, 0.75, 0.14, 0.09, 0.09, 0.38, 0.19, 0.44, 0.09, 0.66, 0.47, 0.55, 0.16, 0.88, 0.5, 0.5, 0.5, 0.75, 0.63, 0.55, 0.13, 0.38, 0.38, 0.16, 0.16, 0.16, 0.19, 0.23, 0.23, 0.05, 0.06, 0.75, 0.06, 0.03, 0.63, 0.88, 0.06, 0.13, 0.14, 0.44, 0.05, 0.25, 0.06, 0.13, 0.16, 0.03, 0.11, 0.11, 0.11, 0.16, 0.14, 0.19, 0.19, 0.09, 0.03, 0.22, 0.14, 0.88, 0.63, 0.75, 0.13, 0.88, 0.08, 0.75, 0.06, 0.16, 0.28, 0.09, 0.55, 0.63, 0.16, 0.16, 0.63, 0.63, 0.28, 0.16, 0.08, 0.03, 0.06, 0.08, 0.13, 0.11, 0.14, 0.03, 0.09, 0.19, 0.19, 0.19, 0.05, 0.03, 0.05, 0.09, 0.75, 0.19, 0.13, 0.31, 0.05, 0.31, 0.23, 0.5, 0.66, 0.66, 0.38, 0.06, 0.08, 0.5, 0.06, 0.06, 0.05, 0.02, 0.09, 0.06, 0.19, 0.16, 0.31, 0.22, 0.31, 0.03, 0.23, 0.11, 0.19, 0.31, 0.56, 0.77, 0.5, 0.88, 0.55, 0.33, 0.23, 0.63, 0.25, 0.56, 0.19, 0.47, 0.28, 0.31, 0.14, 0.55, 0.55, 0.88, 0.23, 0.75, 0.5, 0.19, 0.05, 0.22, 0.31, 0.31, 0.55, 0.55, 0.31, 0.31, 0.19, 0.28, 0.28, 0.13, 0.16, 0.44, 0.28, 0.5, 0.14, 0.06, 0.31, 0.25, 0.28, 0.09, 0.19, 0.16, 0.09, 0.13, 0.19, 0.08, 0.06, 0.19, 0.09, 0.39, 0.23, 0.09, 0.16, 0.22, 0.28, 0.09, 0.16, 0.22, 0.28, 0.09, 0.31, 0.66, 0.25, 0.77, 0.28, 0.38, 0.14, 0.56, 0.16, 0.88, 0.11, 0.44, 0.55, 0.28, 0.38, 0.28, 0.28, 0.44, 0.16, 0.75, 0.23, 0.39, 0.14, 0.19, 0.09, 0.31, 0.31, 0.31, 0.31, 0.31, 0.39, 0.39, 0.25, 0.31, 0.05, 0.88, 0.06, 0.5, 0.09, 0.63, 0.13, 0.25, 0.25, 0.25, 0.25, 0.39, 0.06, 0.25, 0.25, 0.16, 0.13, 0.08, 0.25, 0.28, 0.19, 0.55, 0.19, 0.77, 0.28, 0.44, 0.23, 0.09, 0.38, 0.31, 0.09, 0.47, 0.33, 0.55, 0.31, 0.56, 0.5, 0.25, 0.55, 0.55, 0.25, 0.25, 0.47, 0.31, 0.38, 0.23, 0.06, 0.56, 0.08, 0.47, 0.22, 0.19, 0.38, 0.09, 0.25, 0.16, 0.38, 0.47, 0.25, 0.16, 0.38, 0.66, 0.19, 0.63, 0.23, 0.47, 0.22, 0.09, 0.47, 0.03, 0.28, 0.05, 0.22, 0.03, 0.28, 0.09, 0.22, 0.22, 0.25, 0.06, 0.38, 0.77, 0.23, 0.56, 0.44, 0.75, 0.19, 0.77, 0.33, 0.47, 0.25, 0.56, 0.13, 0.31, 0.19, 0.66, 0.19, 0.19, 0.33, 0.55, 0.38, 0.09, 0.33, 0.19, 0.22, 0.31, 0.33, 0.38, 0.38, 0.09, 0.33, 0.08, 0.22, 0.13, 0.38, 0.19, 0.22, 0.31, 0.38, 0.13, 0.33, 0.5, 0.28, 0.38, 0.19, 0.25, 0.09, 0.38, 0.08, 0.33, 0.09, 0.38, 0.08, 0.38, 0.22, 0.47, 0.09, 0.39, 0.23, 0.31, 0.19, 0.23, 0.05, 0.28, 0.06, 0.31, 0.09, 0.31, 0.19, 0.28, 0.66, 0.19, 0.77, 0.25, 0.47, 0.33, 0.56, 0.22, 0.88, 0.11, 0.38, 0.14, 0.28, 0.31, 0.08, 0.13, 0.23, 0.05, 0.44, 0.09, 0.33, 0.09, 0.09, 0.06, 0.16, 0.06, 0.19, 0.19, 0.25, 0.14, 0.44, 0.77, 0.77, 0.14, 0.88, 0.06, 0.22, 0.19, 0.25, 0.03, 0.03, 0.03, 0.03, 0.03, 0.19, 0.13, 0.56, 0.38, 0.66, 0.25, 0.22, 0.31, 0.31, 0.31, 0.5, 0.55, 0.63, 0.38, 0.66, 0.47, 0.55, 0.55, 0.03, 0.31, 0.03, 0.22, 0.47, 0.47, 0.47, 0.19, 0.75, 0.47, 0.31, 0.28, 0.19, 0.63, 0.44, 0.47, 0.14, 0.23, 0.63, 0.66, 0.5, 0.47, 0.44, 0.38, 0.31, 0.75, 0.31, 0.25, 0.08, 0.19, 0.14, 0.66, 0.05, 0.5, 0.14, 0.63, 0.56, 0.44, 0.47, 0.06, 0.55, 0.09, 0.28, 0.11, 0.5, 0.88, 0.56, 1, 0.44, 0.77, 0.28, 0.75, 0.44, 0.11, 0.06, 0.22, 0.16, 0.38, 0.75, 0.75, 0.19, 0.47, 0.09, 0.25, 0.47, 0.19, 0.47, 0.23, 0.56, 0.19, 0.31, 0.28, 0.55, 0.11, 0.88, 0.09, 0.31, 0.05, 0.28, 0.55, 0.55, 0.05, 0.44, 0.14, 0.14, 0.14, 0.63, 0.08, 0.38, 0.31, 0.39, 0.31, 0.25, 0.09, 0.23, 0.28, 0.56, 0.25, 0.25, 0.09, 0.66, 0.08, 0.44, 0.31, 0.47, 0.16, 0.63, 0.31, 0.39, 0.08, 0.63, 0.47, 0.47, 0.39, 0.39, 0.39, 0.39, 0.13, 0.31, 0.28, 0.25, 0.31, 0.14, 0.31, 0.31, 0.47, 0.33, 0.66, 0.28, 0.44, 0.5, 0.75, 0.63, 0.88, 0.19, 0.19, 0.19, 0.33, 0.5, 0.47, 0.38, 0.38, 0.38, 0.38, 0.31, 0.13, 0.14, 0.14, 0.14, 0.55, 0.23, 0.56, 0.22, 0.38, 0.39, 0.23, 0.08, 0.33, 0.05, 0.38, 0.44, 0.44, 0.31, 0.31, 0.31, 0.19, 0.39, 0.75, 0.09, 0.19, 0.25, 0.23, 0.31, 0.44, 0.47, 0.47, 0.47, 0.23, 0.44, 0.66, 0.66, 0.66, 0.75, 0.56, 0.47, 0.77, 0.38, 0.88, 0.47, 0.75, 0.63, 0.08, 0.13, 0.75, 0.75, 0.77, 0.38, 0.47, 0.47, 0.03, 0.23, 0.56, 0.31, 0.09, 0.28, 0.66, 0.19, 0.08, 0.33, 0.56, 0.28, 0.66, 0.25, 0.19, 0.39, 0.16, 0.31, 0.19, 0.33, 0.56, 0.11, 0.03, 0.19, 0.06, 0.23, 0.05, 0.28, 0.13, 0.23, 0.09, 0.38, 0.13, 0.33, 0.03, 0.08, 0.09, 0.44, 0.13, 0.38, 0.09, 0.33, 0.13, 0.22, 0.06, 0.28, 0.09, 0.44, 0.13, 0.28, 0.56, 0.33, 0.66, 0.22, 0.77, 0.11, 0.88, 0.19, 0.23, 0.31, 0.28, 0.13, 0.31, 0.08, 0.19, 0.14, 0.31, 0.31, 0.44, 0.09, 0.39, 0.09, 0.22, 0.39, 0.39, 0.38, 0.44, 0.22, 0.33, 0.09, 0.5, 0.23, 0.19, 0.06, 0.23, 0.23, 0.23, 0.19, 0.19, 0.19, 0.39, 0.23, 0.16, 0.47, 0.63, 0.5, 0.56, 0.16, 0.55, 0.09, 0.77, 0.5, 0.5, 0.31, 0.31, 0.31, 0.25, 0.31, 0.19, 0.13, 0.08, 0.09, 0.06, 0.19, 0.19, 0.03, 0.03, 0.03, 0.63, 0.66, 0.66, 0.09, 0.05, 0.16, 0.56, 0.28, 0.38, 0.31, 0.33, 0.06, 0.08, 0.19, 0.56, 0.14, 0.47, 0.28, 0.31, 0.25, 0.55, 0.38, 0.88, 0.23, 0.23, 0.23, 0.23, 0.05, 0.28, 0.16, 0.19, 0.19, 0.55, 0.11, 0.75, 0.33, 0.63, 0.5, 0.55, 0.33, 0.33, 0.33, 0.44, 0.31, 0.5, 0.44, 0.19, 0.13, 0.33, 0.16, 0.39, 0.39, 0.39, 0.06, 0.28, 0.23, 0.08, 0.16, 0.13, 0.13, 0.38, 0.28, 0.28, 0.19, 0.23, 0.23, 0.06, 0.06, 0.5, 0.25, 0.31, 0.31, 0.31, 0.25, 0.31, 0.56, 0.47, 0.25, 0.31, 0.19, 0.39, 0.14, 0.28, 0.33, 0.66, 0.22, 0.77, 0.31, 0.38, 0.19, 0.55, 0.16, 0.88, 0.11, 0.44, 0.31, 0.25, 0.55, 0.56, 0.23, 0.47, 0.13, 0.31, 0.31, 0.25, 0.25, 0.25, 0.55, 0.38, 0.05, 0.66, 0.75, 0.75, 0.75, 0.16, 0.06, 0.23, 0.28, 0.28, 0.09, 0.23, 0.39, 0.47, 0.38, 0.38, 0.38, 0.38, 0.38, 0.33, 0.31, 0.75, 0.19, 0.08, 0.16, 0.16, 0.19, 0.13, 0.19, 0.47, 0.14, 0.31, 0.25, 0.55, 0.38, 0.28, 0.31, 0.31, 0.23, 0.47, 0.44, 0.47, 0.5, 0.44, 0.63, 0.19, 0.03, 0.56, 0.28, 0.75, 0.19, 0.08, 0.16, 0.16, 0.05, 0.5, 0.09, 0.88, 0.16, 0.08, 0.33, 0.06, 0.05, 0.23, 0.47, 0.47, 0.47, 0.25, 0.25, 0.19, 0.16, 0.38, 0.13, 0.38, 0.38, 0.63, 0.09, 0.25, 0.25, 0.66, 0.19, 0.77, 0.14, 0.38, 0.31, 0.56, 0.16, 0.88, 0.28, 0.44, 0.11, 0.44, 0.23, 0.47, 0.08, 0.16, 0.16, 0.28, 0.13, 0.39, 0.31, 0.25, 0.09, 0.09, 0.09, 0.47, 0.28, 0.66, 0.13, 0.75, 0.05, 0.55, 0.13, 0.19, 0.06, 0.23, 0.28, 0.28, 0.06, 0.31, 0.23, 0.25, 0.75, 0.44, 0.19, 0.38, 0.33, 0.55, 0.55, 0.55, 0.13, 0.55, 0.44, 0.77, 0.19, 0.09, 0.06, 0.11, 0.38, 0.75, 0.19, 0.13, 0.03, 0.33, 0.05, 0.11, 0.16, 0.13, 0.19, 0.11, 0.22, 0.47, 0.19, 0.22, 0.13, 0.33, 0.06, 0.25, 0.5, 0.55, 0.13, 0.47, 0.05, 0.55, 0.13, 0.47, 0.19, 0.44, 0.08, 0.38, 0.55, 0.63, 0.31, 0.28, 0.25, 0.31, 0.13, 0.31, 0.31, 0.47, 0.33, 0.66, 0.28, 0.44, 0.19, 0.47, 0.16, 0.56, 0.11, 0.55, 0.06, 0.33, 0.39, 0.39, 0.39, 0.31, 0.09, 0.38, 0.05, 0.19, 0.38, 0.06, 0.06, 0.5, 0.5, 0.5, 0.23, 0.25, 0.63, 0.31, 0.13, 0.75, 0.33, 0.19, 0.5, 0.25, 0.05, 0.31, 0.31, 0.31, 0.09, 0.28, 0.38, 0.38, 0.38, 0.33, 0.14, 0.16, 0.08, 0.23, 0.19, 0.28, 0.13, 0.55, 0.55, 0.75, 0.23, 0.63, 0.06, 0.09, 0.28, 0.75, 0.5, 0.66, 0.44, 0.44, 0.19, 0.28, 0.08, 0.55, 0.63, 0.03, 0.38, 0.66, 0.06, 0.19, 0.06, 0.31, 0.06, 0.31, 0.16, 0.63, 0.63, 0.22, 0.11, 0.13, 0.25, 0.22, 0.11, 0.31, 0.28, 0.25, 0.31, 0.14, 0.31, 0.31, 0.47, 0.33, 0.66, 0.5, 0.75, 0.28, 0.44, 0.63, 0.88, 0.19, 0.19, 0.19, 0.33, 0.5, 0.47, 0.38, 0.38, 0.38, 0.38, 0.31, 0.55, 0.05, 0.56, 0.13, 0.38, 0.19, 0.25, 0.33, 0.19, 0.08, 0.38, 0.16, 0.38, 0.19, 0.47, 0.14, 0.31, 0.25, 0.55, 0.31, 0.31, 0.38, 0.28, 0.23, 0.47, 0.44, 0.47, 0.5, 0.44, 0.63, 0.19, 0.03, 0.56, 0.28, 0.75, 0.19, 0.08, 0.16, 0.16, 0.05, 0.5, 0.09, 0.88, 0.16, 0.08, 0.33, 0.06, 0.05, 0.23, 0.47, 0.47, 0.47, 0.25, 0.25, 0.19, 0.16, 0.38, 0.13, 0.38, 0.38, 0.63, 0.09, 0.25];
  Samples.b1 = [0, 0, 0, 0, 0, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.5, 0.5, 0.5, 0.5, 0.67, 0.67, 0.83, 0.83, 0.83, 0.83, 0.83, 0.83, 1, 0, 0, 0, 0, 0, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 0.8, 0.8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0.17, 0.17, 0.17, 0.17, 0.33, 0.33, 0.33, 0.33, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.67, 0.67, 0.67, 0.67, 0.83, 0.83, 0.83, 0.83, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 0.8, 0.8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.25, 0.25, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.5, 0.5, 0.58, 0.58, 0.58, 0.58, 0.58, 0.58, 0.58, 0.58, 0.58, 0.58, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.75, 0.75, 0.83, 0.83, 0.83, 0.83, 0.83, 0.83, 0.92, 0.92, 0.92, 0.92, 0.92, 0.92, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0.17, 0.17, 0.33, 0.33, 0.33, 0.33, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.83, 0.83, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.5, 0.5, 0.67, 0.67, 0.83, 0.83, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.33, 0.33, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.33, 0.33, 0.5, 0.5, 0.5, 0.5, 0.67, 0.67, 0.67, 0.67, 0.83, 0.83, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.5, 0.5, 0.5, 0.5, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.83, 0.83, 0.83, 0.83, 1, 1];
  Samples.b2 = [0, 0, 0, 0, 0, 0, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.5, 0.5, 0.67, 0.67, 0.83, 0.83, 0.83, 0.83, 1, 1, 0, 0, 0, 0, 0, 0, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.5, 0.5, 0.67, 0.67, 0.83, 0.83, 0.83, 0.83, 0.83, 0.83, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.33, 0.33, 0.33, 0.33, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.83, 0.83, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.5, 0.5, 0.67, 0.67, 0.83, 0.83, 0.83, 0.83, 0.83, 0.83, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.23, 0.23, 0.23, 0.23, 0.31, 0.31, 0.31, 0.31, 0.31, 0.31, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.46, 0.46, 0.46, 0.46, 0.54, 0.54, 0.54, 0.54, 0.54, 0.54, 0.54, 0.54, 0.62, 0.62, 0.69, 0.69, 0.69, 0.69, 0.69, 0.69, 0.69, 0.69, 0.69, 0.69, 0.69, 0.69, 0.69, 0.69, 0.69, 0.69, 0.69, 0.69, 0.69, 0.69, 0.77, 0.77, 0.77, 0.77, 0.85, 0.85, 0.85, 0.85, 0.85, 0.85, 0.92, 0.92, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2, 0.2, 0.2, 0.2, 0.4, 0.4, 0.4, 0.4, 0.6, 0.6, 0.6, 0.6, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.17, 0.17, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.5, 0.5, 0.67, 0.67, 0.83, 0.83, 0.83, 0.83, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.25, 0.5, 0.5, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.33, 0.33, 0.33, 0.33, 0.5, 0.5, 0.67, 0.67, 0.67, 0.67, 0.83, 0.83, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0.14, 0.14, 0.14, 0.14, 0.14, 0.14, 0.14, 0.14, 0.14, 0.14, 0.29, 0.29, 0.29, 0.29, 0.29, 0.29, 0.43, 0.43, 0.43, 0.43, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.71, 0.71, 0.86, 0.86, 1];
  Samples.c = [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1];
  Samples.d = [0, 0, 0, 0, 0.03, 0.03, 0.05, 0.06, 0.07, 0.1, 0.12, 0.13, 0.18, 0.18, 0.19, 0.18, 0.17, 0.17, 0.18, 0.17, 0.17, 0.18, 0.19, 0.21, 0.23, 0.24, 0.24, 0.23, 0.24, 0.23, 0.24, 0.26, 0, 0, 0.06, 0.08, 0.07, 0.06, 0.07, 0.06, 0.06, 0.07, 0.08, 0.08, 0.13, 0.12, 0.13, 0.15, 0.19, 0.22, 0.25, 0.25, 0.25, 0.24, 0.23, 0.22, 0.23, 0.24, 0.23, 0.22, 0.23, 0.24, 0.25, 0.24, 0.25, 0.25, 0.24, 0.25, 0.25, 0.25, 0.25, 0.25, 0.26, 0.26, 0.26, 0.27, 0.27, 0.27, 0.27, 0.26, 0.27, 0.27, 0.27, 0.27, 0, 0, 0.06, 0.08, 0.13, 0.11, 0.14, 0.13, 0.2, 0.18, 0.17, 0.15, 0.15, 0.14, 0.14, 0.18, 0.2, 0.2, 0.2, 0.23, 0.24, 0.24, 0.25, 0.28, 0.29, 0.31, 0.3, 0.3, 0.29, 0.29, 0.3, 0.29, 0.29, 0.31, 0.3, 0.3, 0, 0, 0.06, 0.08, 0.07, 0.06, 0.07, 0.06, 0.06, 0.07, 0.08, 0.08, 0.13, 0.12, 0.13, 0.15, 0.19, 0.22, 0.25, 0.25, 0.25, 0.24, 0.23, 0.22, 0.23, 0.24, 0.23, 0.22, 0.23, 0.24, 0.25, 0.24, 0.25, 0.25, 0.24, 0.25, 0.25, 0.25, 0.25, 0.25, 0.26, 0.26, 0.26, 0.27, 0.27, 0.27, 0.27, 0.26, 0.27, 0.27, 0.27, 0.27, 0, 0, 0, 0, 0.03, 0.03, 0.05, 0.08, 0.09, 0.12, 0.11, 0.1, 0.1, 0.11, 0.1, 0.11, 0.13, 0.14, 0.17, 0.17, 0.17, 0.2, 0.22, 0.25, 0.27, 0.26, 0.25, 0.25, 0.25, 0.24, 0.24, 0.24, 0.26, 0.27, 0.27, 0.27, 0.26, 0.27, 0.27, 0.28, 0.28, 0.29, 0.28, 0.28, 0.29, 0.28, 0.29, 0.3, 0.29, 0.29, 0.29, 0.29, 0.3, 0.3, 0.31, 0.32, 0.32, 0.32, 0.32, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.34, 0.33, 0.33, 0.33, 0.32, 0.32, 0.33, 0.33, 0.34, 0.34, 0.33, 0.34, 0.34, 0.35, 0.35, 0.35, 0.36, 0.36, 0.36, 0.36, 0.37, 0.37, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.37, 0.37, 0.37, 0.38, 0.38, 0.37, 0.38, 0.38, 0.37, 0.38, 0.38, 0.39, 0.39, 0.39, 0.39, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.41, 0.41, 0.41, 0.41, 0.42, 0.42, 0.42, 0.42, 0.42, 0, 0, 0.06, 0.08, 0.13, 0.14, 0.12, 0.1, 0.19, 0.18, 0.21, 0.19, 0.21, 0.24, 0.23, 0.26, 0.25, 0.26, 0.26, 0.27, 0.26, 0.26, 0.25, 0.25, 0.24, 0.26, 0.27, 0.26, 0.26, 0.26, 0.27, 0.28, 0.29, 0.3, 0.3, 0, 0, 0.06, 0.08, 0.13, 0.11, 0.14, 0.15, 0.13, 0.12, 0.18, 0.19, 0.18, 0.18, 0.18, 0.18, 0.21, 0.2, 0.2, 0.23, 0.23, 0.22, 0.22, 0.24, 0.23, 0.24, 0.26, 0.25, 0.25, 0.25, 0.24, 0.24, 0.24, 0, 0, 0.06, 0.08, 0.13, 0.11, 0.14, 0.15, 0.22, 0.23, 0.26, 0.24, 0.24, 0.29, 0.27, 0.25, 0.24, 0.23, 0.23, 0.23, 0.24, 0.23, 0.22, 0.22, 0.23, 0.25, 0.24, 0.26, 0.26, 0.26, 0.27, 0.27, 0.28, 0.27, 0.27, 0.28, 0.27, 0.28, 0.28, 0.29, 0.28, 0.29, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0, 0, 0.06, 0.08, 0.13, 0.11, 0.14, 0.13, 0.2, 0.22, 0.2, 0.18, 0.17, 0.2, 0.2, 0.21, 0.23, 0.22, 0.21, 0.21, 0.2, 0.19, 0.19, 0.2, 0.22, 0.24, 0.25, 0.26, 0.26, 0.27, 0.26, 0.26, 0.25, 0.25, 0.25, 0.26, 0.27, 0, 0, 0.06, 0.08, 0.07, 0.06, 0.07, 0.08, 0.09, 0.08, 0.11, 0.12, 0.17, 0.15, 0.2, 0.19, 0.19, 0.19, 0.22, 0.24, 0.27, 0.26, 0.26, 0.25, 0.25, 0.25, 0.25, 0.27, 0.27, 0.28, 0.28, 0.3, 0.29, 0.3, 0.29, 0.31, 0.31, 0.32, 0.31];
  Samples.e = [1, 0.97, 0.94, 0.91, 0.88, 0.84, 0.81, 0.78, 0.75, 0.72, 0.69, 0.66, 0.63, 0.59, 0.56, 0.53, 0.5, 0.47, 0.44, 0.41, 0.38, 0.34, 0.31, 0.28, 0.25, 0.22, 0.19, 0.16, 0.13, 0.09, 0.06, 0.03, 1, 0.98, 0.96, 0.94, 0.92, 0.9, 0.88, 0.87, 0.85, 0.83, 0.81, 0.79, 0.77, 0.75, 0.73, 0.71, 0.69, 0.67, 0.65, 0.63, 0.62, 0.6, 0.58, 0.56, 0.54, 0.52, 0.5, 0.48, 0.46, 0.44, 0.42, 0.4, 0.38, 0.37, 0.35, 0.33, 0.31, 0.29, 0.27, 0.25, 0.23, 0.21, 0.19, 0.17, 0.15, 0.13, 0.12, 0.1, 0.08, 0.06, 0.04, 0.02, 1, 0.97, 0.94, 0.92, 0.89, 0.86, 0.83, 0.81, 0.78, 0.75, 0.72, 0.69, 0.67, 0.64, 0.61, 0.58, 0.56, 0.53, 0.5, 0.47, 0.44, 0.42, 0.39, 0.36, 0.33, 0.31, 0.28, 0.25, 0.22, 0.19, 0.17, 0.14, 0.11, 0.08, 0.06, 0.03, 1, 0.98, 0.96, 0.94, 0.92, 0.9, 0.88, 0.87, 0.85, 0.83, 0.81, 0.79, 0.77, 0.75, 0.73, 0.71, 0.69, 0.67, 0.65, 0.63, 0.62, 0.6, 0.58, 0.56, 0.54, 0.52, 0.5, 0.48, 0.46, 0.44, 0.42, 0.4, 0.38, 0.37, 0.35, 0.33, 0.31, 0.29, 0.27, 0.25, 0.23, 0.21, 0.19, 0.17, 0.15, 0.13, 0.12, 0.1, 0.08, 0.06, 0.04, 0.02, 1, 0.99, 0.98, 0.98, 0.97, 0.96, 0.95, 0.94, 0.94, 0.93, 0.92, 0.91, 0.9, 0.9, 0.89, 0.88, 0.87, 0.87, 0.86, 0.85, 0.84, 0.83, 0.83, 0.82, 0.81, 0.8, 0.79, 0.79, 0.78, 0.77, 0.76, 0.75, 0.75, 0.74, 0.73, 0.72, 0.71, 0.71, 0.7, 0.69, 0.68, 0.67, 0.67, 0.66, 0.65, 0.64, 0.63, 0.63, 0.62, 0.61, 0.6, 0.6, 0.59, 0.58, 0.57, 0.56, 0.56, 0.55, 0.54, 0.53, 0.52, 0.52, 0.51, 0.5, 0.49, 0.48, 0.48, 0.47, 0.46, 0.45, 0.44, 0.44, 0.43, 0.42, 0.41, 0.4, 0.4, 0.39, 0.38, 0.37, 0.37, 0.36, 0.35, 0.34, 0.33, 0.33, 0.32, 0.31, 0.3, 0.29, 0.29, 0.28, 0.27, 0.26, 0.25, 0.25, 0.24, 0.23, 0.22, 0.21, 0.21, 0.2, 0.19, 0.18, 0.17, 0.17, 0.16, 0.15, 0.14, 0.13, 0.13, 0.12, 0.11, 0.1, 0.1, 0.09, 0.08, 0.07, 0.06, 0.06, 0.05, 0.04, 0.03, 0.02, 0.02, 0.01, 1, 0.97, 0.94, 0.91, 0.89, 0.86, 0.83, 0.8, 0.77, 0.74, 0.71, 0.69, 0.66, 0.63, 0.6, 0.57, 0.54, 0.51, 0.49, 0.46, 0.43, 0.4, 0.37, 0.34, 0.31, 0.29, 0.26, 0.23, 0.2, 0.17, 0.14, 0.11, 0.09, 0.06, 0.03, 1, 0.97, 0.94, 0.91, 0.88, 0.85, 0.82, 0.79, 0.76, 0.73, 0.7, 0.67, 0.64, 0.61, 0.58, 0.55, 0.52, 0.48, 0.45, 0.42, 0.39, 0.36, 0.33, 0.3, 0.27, 0.24, 0.21, 0.18, 0.15, 0.12, 0.09, 0.06, 0.03, 1, 0.98, 0.96, 0.94, 0.92, 0.9, 0.88, 0.86, 0.84, 0.82, 0.8, 0.78, 0.76, 0.73, 0.71, 0.69, 0.67, 0.65, 0.63, 0.61, 0.59, 0.57, 0.55, 0.53, 0.51, 0.49, 0.47, 0.45, 0.43, 0.41, 0.39, 0.37, 0.35, 0.33, 0.31, 0.29, 0.27, 0.24, 0.22, 0.2, 0.18, 0.16, 0.14, 0.12, 0.1, 0.08, 0.06, 0.04, 0.02, 1, 0.97, 0.95, 0.92, 0.89, 0.86, 0.84, 0.81, 0.78, 0.76, 0.73, 0.7, 0.68, 0.65, 0.62, 0.59, 0.57, 0.54, 0.51, 0.49, 0.46, 0.43, 0.41, 0.38, 0.35, 0.32, 0.3, 0.27, 0.24, 0.22, 0.19, 0.16, 0.14, 0.11, 0.08, 0.05, 0.03, 1, 0.97, 0.95, 0.92, 0.9, 0.87, 0.85, 0.82, 0.79, 0.77, 0.74, 0.72, 0.69, 0.67, 0.64, 0.62, 0.59, 0.56, 0.54, 0.51, 0.49, 0.46, 0.44, 0.41, 0.38, 0.36, 0.33, 0.31, 0.28, 0.26, 0.23, 0.21, 0.18, 0.15, 0.13, 0.1, 0.08, 0.05, 0.03];
  Samples.f = [0, 0.08, 0.24, 0.48, 0.8, 0.2, 0.68, 0.24, 0.88, 0.6, 0.4, 0.28, 0.24, 0.28, 0.4, 0.6, 0.88, 0.24, 0.68, 0.2, 0.8, 0.48, 0.24, 0.08, 0, 0, 0.08, 0.24, 0.48, 0.8, 0.2, 0.68, 0, 0.09, 0.27, 0.54, 0.9, 0.35, 0.89, 0.52, 0.24, 0.05, 0.95, 0.94, 0.02, 0.19, 0.45, 0.8, 0.24, 0.77, 0.39, 0.1, 0.9, 0.79, 0.77, 0.84, 0, 0.25, 0.59, 0.02, 0.54, 0.15, 0.85, 0.64, 0.52, 0.49, 0.55, 0.7, 0.94, 0.27, 0.69, 0.2, 0.8, 0.49, 0.27, 0.14, 0.1, 0.15, 0.29, 0.52, 0.84, 0.25, 0.75, 0.34, 0, 0.1, 0.3, 0.6, 0, 0.5, 0.1, 0.8, 0.6, 0.5, 0.5, 0.6, 0.8, 0.1, 0.5, 0, 0.6, 0.3, 0.1, 0, 0, 0.1, 0.3, 0.6, 0, 0.5, 0.1, 0.8, 0.6, 0.5, 0.5, 0.6, 0.8, 0.1, 0.5, 0, 0, 0.11, 0.33, 0.66, 0.1, 0.65, 0.31, 0.08, 0.96, 0.95, 0.05, 0.26, 0.58, 0.01, 0.55, 0.2, 0.96, 0.83, 0.81, 0.9, 0.1, 0.41, 0.83, 0.36, 0, 0.75, 0.61, 0.58, 0.66, 0.85, 0.15, 0.56, 0.08, 0.71, 0.45, 0.3, 0.26, 0.33, 0.51, 0.8, 0.2, 0.71, 0.33, 0.06, 0.9, 0.85, 0.91, 0.08, 0.36, 0.75, 0.25, 0.86, 0, 0.12, 0.36, 0.72, 0.2, 0.8, 0.52, 0.36, 0.32, 0.4, 0.6, 0.92, 0.36, 0.92, 0.6, 0.4, 0.32, 0.36, 0.52, 0.8, 0.2, 0.72, 0.36, 0.12, 0, 0, 0.12, 0.36, 0.72, 0.2, 0.8, 0.52, 0.36, 0.32, 0.4, 0.6, 0.92, 0.36, 0.92, 0.6, 0.4, 0.32, 0.36, 0.52, 0.8, 0.2, 0.72, 0.36, 0.12, 0, 0, 0.12, 0.36, 0.72, 0.2, 0.8, 0.52, 0.36, 0.32, 0.4, 0.6, 0.92, 0.36, 0.92, 0.6, 0.4, 0.32, 0.36, 0.52, 0.8, 0.2, 0.72, 0.36, 0.12, 0, 0, 0.12, 0.36, 0.72, 0.2, 0.8, 0.52, 0.36, 0.32, 0.4, 0.6, 0.92, 0.36, 0.92, 0.6, 0.4, 0.32, 0.36, 0.52, 0.8, 0.2, 0.72, 0.36, 0.12, 0, 0, 0.12, 0.36, 0.72, 0.2, 0.8, 0.52, 0.36, 0.32, 0.4, 0.6, 0.92, 0.36, 0.92, 0.6, 0.4, 0.32, 0.36, 0.52, 0.8, 0.2, 0.72, 0.36, 0.12, 0, 0, 0, 0.13, 0.39, 0.78, 0.3, 0.95, 0.73, 0.64, 0.68, 0.85, 0.15, 0.58, 0.14, 0.83, 0.65, 0.6, 0.68, 0.89, 0.23, 0.7, 0.3, 0.03, 0.89, 0.88, 0, 0.25, 0.63, 0.14, 0.78, 0.55, 0.45, 0.48, 0.64, 0.93, 0.35, 0, 0.14, 0.42, 0.84, 0.4, 0.1, 0.94, 0.92, 0.04, 0.3, 0.7, 0.24, 0.92, 0.74, 0.7, 0.8, 0.04, 0.42, 0.94, 0.6, 0.4, 0.34, 0.42, 0.64, 0, 0.5, 0.14, 0.92, 0.84, 0.9, 0.1, 0.44, 0.92, 0, 0.15, 0.45, 0.9, 0.5, 0.25, 0.15, 0.2, 0.4, 0.75, 0.25, 0.9, 0.7, 0.65, 0.75, 0, 0.4, 0.95, 0.65, 0.5, 0.5, 0.65, 0.95, 0.4, 0, 0.75, 0.65, 0.7, 0.9, 0.25, 0.75, 0.4, 0.2, 0.15, 0.25, 0.5, 0.9, 0.45, 0.15, 0, 0, 0.15, 0.45, 0.9, 0.5, 0.25, 0.15, 0.2, 0.4, 0, 0.16, 0.48, 0.96, 0.6, 0.4, 0.36, 0.48, 0.76, 0.2, 0.8, 0.56, 0.48, 0.56, 0.8, 0.2, 0.76, 0.48, 0.36, 0.4, 0.6, 0.96, 0.48, 0.16, 0, 0, 0.16, 0.48, 0.96, 0.6, 0.4, 0.36, 0.48, 0.76, 0.2, 0.8, 0.56, 0, 0.17, 0.51, 0.02, 0.7, 0.55, 0.57, 0.76, 0.12, 0.65, 0.35, 0.22, 0.26, 0.47, 0.85, 0.4, 0.12, 0.01, 0.07, 0.3, 0.7, 0.27, 0.01, 0.92, 0, 0.25, 0.67, 0.26, 0.02, 0.95, 0.05, 0.32, 0.76, 0.37, 0.15, 0.1, 0.22, 0.51, 0.97];
  data = {};
  data.a = [];
  data.a[0] = Samples.a1[Math.floor(Math.random() * Samples.a1.length)];
  data.a[1] = Samples.a1[Math.floor(Math.random() * Samples.a2.length)];
  data.b = [];
  data.b[0] = Samples.a1[Math.floor(Math.random() * Samples.b1.length)];
  data.b[1] = Samples.a1[Math.floor(Math.random() * Samples.b1.length)];
  data.c = Samples.a1[Math.floor(Math.random() * Samples.c.length)];
  data.d = Samples.a1[Math.floor(Math.random() * Samples.d.length)];
  data.e = Samples.a1[Math.floor(Math.random() * Samples.e.length)];
  data.f = Samples.a1[Math.floor(Math.random() * Samples.f.length)];
function setup () {
	canvas = createCanvas( windowWidth, windowHeight );
	console.log("windowWidth" + windowWidth + " window height" + windowHeight)
	middleX = windowWidth / 2;
    middleY = windowHeight / 2;
	// newColor0 = color(247, 75, 43, 127);
	// newColor1 = color (200, 38, 8, 127);
	// newColor2 = color(255, 214, 147, 127);
	// newColor3 = color (247, 169, 43, 127);
	// newColor4 = color(247, 218, 43, 127);
	// newColor5 = color (14, 168, 70, 127);
	// bgCol = color(100,14,14,255);
	// bgColA = color(175,14,14,255);
	// colors = [newColor0, newColor1, newColor2, newColor3, newColor4, newColor5];
	Clock.bpm(floor(random(55,75)));
	effectsTypes = [ [LPF, 'rising']  , [Delay, 'endless', 'wobbler', 'nightChill'],
	[Schizo, 'sane', 'borderline', 'pitchless'], [Vibrato, 'light']];
	effectsProperties = [ ['LPF', ['cutoff',0,1], ['resonance', 0,5] ]  , ['Delay', ['time',0,1], ['feedback', 0,5]],
	['Schizo', ['chance', 0,1], ['reverseChance',0,1], ['mix',0, 1],
    ['length', 1/4,1/3,1/8,1/16,1/2]], ['Vibrato', ['rate',.01,5], ['offset',25,1250 ], ['amount', 25,100]]];
	//can set it up so if only two numbers, treat it as range, otherwise, treat it as multi option specific picker
	//songBus = Bus().fx.add( Reverb('large'))
	// drum = XOX('x*x*x*x-x*x*x*xox*x*x*x-x*x*xxxo', 1/16);
	// drum.fx.add(Crush('lowSamp'))
	RandomWeather();
	GroupSynths(3);
	NewScore();
	mult = [200,200,200,200,2,2,2];

}

// function CoolSquare(w, h, r, c, v, t){
// 	rectMode(RADIUS);
// 	fill(c);
// 	strokeWeight(v);
// 	rect(bw*(t*2), h, (200 + (v * 5)), (200 - (v * 5) ), 50, 50, 100, 100)
// }

// // function draw () {
// // 	//var ;
// // 	noStroke();
// //     fill(bgCol);
// //     rect(0, 0, width, height); 
// // 	for (var i = 0; i < fols.length; i++){
// // 		var gV = fols[i].getValue(), m = mult[i],
// // 		value = gV * m, col = colors[i],

// // 		//        if width greater than height, use wh * value, otherwise use ww2 * value
// // 	    radius = ( ww2 > wh ? wh * value: ww2 * value);
// // 		CoolSquare(ww2, wh, radius, col, value, i  );
// // 	}
// // }

function add(a, b) {
 	return a + b;
}

function CoinReturn() {
 	var coin = Math.round(Math.random()*1.5);
 	return coin;
 }

// function Stopper () {

// }

function draw() {
      var hue, i, offsetX, track, v, j, len, len1, ref, ref1; 
      //results;

      // if (lastBeat === 4 && gibber.Clock.currentBeat === 1) {
      //   sketch.onBarChange();
      //   if (barIndex % 4 === 0) {
      //     sketch.onPhraseChange();
      //   }
      // }
      // lastBeat = gibber.Clock.currentBeat;
      // if (!visualizer) {
      //   return;
      // }
      // background and clear old lines
      noStroke();
      fill(255);
      rect(0, 0, windowWidth, windowHeight);
      
      ref = tracks;
      for (i = 0, len = ref.length; i < len; ++i) {
        track = ref[i];
        xOffsets[i] += tracks[i].instrument.frequency / 1000  ;
      //  console.log(xOffsets[i] + " " + i + " i ");
        hues[i] += tracks[i].follow.getValue() / 1000;
      //  console.log(hues[i]);
         if (hues[i] < 100) {
         	//set ceiling of hues, over 100 loops back to 1
           hues[i] = 100;
         }
    }
    stroke(200, 200, 100, hue);
    //blendMode(LIGHTEST);
    ref1 = tracks;
   // results = [];
    ref1L = ref1.length;
    for ( j = 0, len1 = ref1L; j < len1; ++j) {
        track = ref1[j];
        v = Math.max(0, track.follow.getValue());
        offsetX = xOffsets[j];
        hue = hues[j];
        renderSynth(v, offsetX, hue, track.instrument.frequency);
    }
   // return results;
};

function RandomWeather() {
 	// temperature = floor(random(33,75));
 	// temperatureC = floor((temperature  -  32)  *  5/9);
 	day = floor(random(0,2));
 	//day = 1;
 	 rainy = floor(random(0,2));
 	//rainy = 0;
 	//cloudy = 1;
 	cloudy = floor(random(0,2));
 	console.log(day + " day " + rainy + "rainy" + cloudy + "cloudy")
 }

function renderSynth(amp, offset, hue, freq) {
      var ellipse1Size, ellipse2Size, i, lineCount, lineLength, radius, tDegrees, theta, varianceFromCenter, x1, x2, y1, y2, _i, ref, results;
      stroke(hue, 100, 50, 255);
      lineCount = 25;
      lineLength = amp * freq;
      radius = (amp * windowWidth);
      varianceFromCenter = amp * 5;
      if (rainy) {
      	ellipse1Size = (amp * (windowWidth * 100));
	    //  ellipse2Size = (offset >> 2) * 2;
	    lineLength = amp * (windowWidth * 10);
	      results = [];
	      for (i = _i = 0, _ref = lineCount - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
	        stroke(0, 0, 50, hue);
	        noFill();
	        //blendMode(LIGHTEST);
	        theta = (i * 45 / lineCount) + offset;
	        tDegrees = theta / 45 * Math.PI;
	        x1 = windowWidth / 2;
	        y1 = windowHeight / 2;
	        x2 = middleX + (radius + 5 * lineLength) * Math.cos(tDegrees);
	        y2 = middleY + (radius + 5 * lineLength) * Math.sin(tDegrees);
	        line(x1, y1, x2, y2);
	        
	        	//circles at tip of lines
	          noStroke();
	          //fill(0, 0, 50, hue);
	          rect(x1, y1, ellipse1Size, ellipse1Size);
	          results.push(ellipse(x2, y2, ellipse2Size, ellipse2Size));
	        
	      }
	      return results;

      }
      else if (cloudy) {
      	ellipse1Size = (amp * (windowWidth * 20));
	      ellipse2Size = (offset >> 1) * data.a[1];
	      results = [];
	      for (i = _i = 0, _ref = lineCount - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
	        stroke(0, 0, 0, hue);
	        noFill();
	        //blendMode(LIGHTEST);
	         theta = (i * 360 / lineCount) + offset;
	         tDegrees = theta / 180 * Math.PI;
	        x1 = windowWidth / (i * (amp * 1000)) ;
	        y1 = windowHeight / (i *(amp * 2000)) ;
	        x2 = windowWidth * (radius ) * Math.cos(tDegrees);
	        y2 = windowHeight * (radius) * Math.sin(tDegrees);
	        line(x1, y1, x2, y2);
	        //if (sunny) {
	        	//circles at tip of lines
	          noStroke();
	          //fill(0, 0, 50, hue);
	          rect(x1, y1, ellipse1Size, ellipse1Size);
	          results.push(ellipse(x2, y2, ellipse2Size, ellipse2Size));
	        // } else {
	        //   results.push(void 0);
	        // }
	      }
	      return results;

      }
      else if (!rainy || !cloudy) {
      	  ellipse1Size = (amp * (windowWidth / 16));
	      ellipse2Size = (offset >> 12) * data.a[1];
	      results = [];
	      for (i = _i = 0, _ref = lineCount - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
	        stroke(0, 0, 50, hue);
	        noFill();
	        //blendMode(LIGHTEST);
	        theta = (i * 360 / lineCount) + offset;
	        tDegrees = theta / 180 * Math.PI;
	        x1 = middleX + (radius * lineLength) * Math.cos(tDegrees);
	        y1 = middleY + (radius * lineLength) * Math.sin(tDegrees);
	        x2 = middleX + (radius / 25) * Math.cos(tDegrees);
	        y2 = middleY + (radius / 25) * Math.sin(tDegrees);
	        line(x1, y1, x2, y2);
	        if (sunny) {
	        	//circles at tip of lines
	          noStroke();
	          //fill(0, 0, 50, hue);
	          ellipse(x1, y1, ellipse1Size, ellipse1Size);
	          results.push(ellipse(x2, y2, ellipse2Size, ellipse2Size));
	        } else {
	          results.push(void 0);
	        }
	      }
	      return results;
  		}
    };

function GroupSynths(q) {
	
	// bass must be last entry in kinds
	var kinds = ['pad', 'lead', 'bass'], synthKinds = [],
	kindsLength = kinds.length;
	// q is number of instruments to create
	for (var i = 0; i <= q; i++){
		var b;
		b = Bus();
		// if one bass exists already
		if (synthKinds.indexOf('bass') > -1) {
			var k = kinds[floor(random((kindsLength -1)))];
			synth = new SynthCreate(i, k);
			synth.make();
			synthKinds.push(k);
		}
		 else {
			//var k = kinds[floor(random(kindsLength))],
			var k = 'pad',
			fxAmount = floor(random(1,3));
			synth = new SynthCreate(i, k);
			synth.make();
			synthKinds.push(k);
			//create the effects for bus for each synthesizer, fxamount is number of effects to add
			
		}
		for (var j = 0; j < fxAmount; j++){
				var e = floor(random(effectsTypes.length));
				
				effect = new EFXCreate(i, effectsTypes[e][0], effectsTypes[e][floor(random(1,effectsTypes[e].length))], b);
				effect.make()
			//	b.fx.add (name)
			}
			busses.push(b);
			console.log(b + " b ")
	};
}

function SynthCreate(name, kind) {
	var ampVar = .5, 
	presetLeadFMArray = ['bong', 'bong','clarinet', 'glockenspiel', 'glockenspiel', 'glockenspiel'],
	presetLeadMonoArray = ['semiHorn', 'preTester'],
	presetLeadSynthArray = ['bleep', 'bleepEcho', 'rhodes', 'warble', 'calvin'],
	padPresets = ['cascade', 'calvin'],
	pad2Presets = ['triTest'],
	leadInstruments = [FM, Synth, Mono], padInstruments = [Synth2];
	  // name - name object, kind - role of instrument (lead, pad etc), pre- preset,
	  //reference item by spot in syns array... 
	this.name = name;
	   
	this.make = function() {
	var instrumentKind;
	if (kind == 'lead') {
	   	instrumentKind = leadInstruments[floor(random(leadInstruments.length))];
	   	if (instrumentKind == FM){
	   		//pre =  'brass'
	   		pre = presetLeadFMArray[floor(random(presetLeadFMArray.length))];

	   		//ampVar = .2
	   }
	  else if (instrumentKind == Synth){
	   		pre = presetLeadSynthArray[floor(random(presetLeadSynthArray.length))];
	   		if (pre == 'cascade' || pre == 'warble') {
	   		//	ampVar = .2
	   		}
	   		else if (pre == 'calvin') {
	   		//	ampVar = .05
	   		}
	   		else {
	   		//	ampVar = .5
	   		}
	   }
	   else if (instrumentKind == Mono){
	   		pre = presetLeadMonoArray[floor(random(presetLeadMonoArray.length))];
	   		ampVar = .25
	   }
	}
	else if (kind == 'pad') {
		ampVar = .5
		var coin = Math.round(Math.random()*2);
		if (coin == 1) {
			instrumentKind = Synth;
			pre = padPresets[floor(random(padPresets.length))]
			if (pre == 'cascade' || pre == 'warble' || pre == 'calvin') {
	   		//	ampVar = .1
	   		}
	   		else {
	   		//	ampVar = .4
	   		}
		}
		else {
			instrumentKind = Synth2;
	    	pre = pad2Presets[floor(random(pad2Presets.length))]
	    	//fampVar = .4	
		};
	}
	else if (kind == 'bass'){
	  	instrumentKind = Mono;
	   	pre = 'waveBass';
	}
	
	name = instrumentKind(pre)
	name.amp (ampVar)
	foll = Follow(name)
	console.log(name + " name " + kind + " kind " + instrumentKind + " instrumentKind " + pre + " pre " + foll + " foll")
	// if want to add fx, call fxObj = new FX(blah blah)
	//fxObj.make();
	//name.fx.add(fxObj);
	var valueToPush = new Array();
			valueToPush[0] = name;
			valueToPush[1] = kind;
	syns.push(valueToPush);

	tracks.push({
        instrument: name,
        follow: foll
      });
	//name._;
	    // pluck is very quiet
  }
}

function EFXCreate(name, kind, kindPre, buss) {
// 	var efX = [presetLPFArray = ['rising'], presetDelayArray = , 
// presetSchizoArray = , presetVibratoArray = ,
//  presetCrushArray = ['clean', 'lowSamp', 'dirty']], pre;
	this.name = name;
	   
	this.make = function() {
		var efxKind, pre;
		efxKind = kind;
		pre = kindPre;
		name = efxKind(pre)
		buss.fx.add(name);
	}
}

function NewScore() {
	var count = 0,
	s = syns.length;
	for (k = 0; k < s; k++ ) {
		//assign each synth to its respective follow for visual representation
		var f = k;
		syns[f][0]._
		syns[f][0].send(busses[k], 1);
		f = Follow (busses[k]);
		fols.push(f);
	}
	a = Seq( function() { 
		console.log(count + "count at beginning")
		//have a count to determine how many synth gets switched and which doesn't, not just length of array
// array of objects to change, objects to stop and objcts to leave alone?
	for (i = 0; i < s; i++){
		//var syn = syns[i][0];
		Updater(i, count);
		//EffectsUpdater(i);
	}
	noteLog.push(currentSeqs)
	randomCount = 4;
	count++;
	console.log( count + " count " + randomCount) }, randomCount ) // every one measures
}

function UpdaterTest (p) {
	var nRbR=[], bR = Harmony.wholeBeetsReturn(.5, floor(random(1,6))),
	nR = Harmony.melodyReturn(0, bR.length, bR.length),
	synth = syns[p][0], coin = CoinReturn();
	if (coin == 1){
		synth.note.seq(nR,bR)
	}
	else if (coin == 0) {
		//synth.note.seq(nR, bR);
	}
}

//synth count notes beats
//

function Updater (p, c) {
	var nR, bR;
	//p is place, place in syns index/for loop
	// c is count
	var stop = false, chord = false, ignore = false, coin = CoinReturn(), synth = syns[p][0],
	synthKind = syns[p][1];
	// flip a coin
	//console.log(p + " . .  "+ coin)
	
	if (synthKind == 'lead') {
		console.log(p + " " + synthKind + " lead ")
		if (coin == 1){
			var anotherCoin = CoinReturn();
			if (anotherCoin == 1){
				if (c == 0) {
					bR = Harmony.wholeBeetsReturn(4, floor(random(1,3)));
					nR = Harmony.notesReturn(floor(random(2,4)), floor(random(1,3)))
				}
				else if (c >= 1){
					if (!noteLog[c-1][p][0]){
						console.log("it  is undefined ");
						bR = Harmony.wholeBeetsReturn(1, floor(random(3,12)));
						bRL = bR.length;
						nR = Harmony.melodyReturn(12, bRL, bRL);
					}
					else {
						// new entry is just previous entry
						console.log("it is defined");
						ignore = true;
						nR = noteLog[c -1 ][p][0];
						bR =noteLog[c - 1][p][1];
					}
				}
			}
			else if (c == 0) {
				bR = Harmony.wholeBeetsReturn(2, floor(random(1,8)));
				bRL = bR.length;
				nR = Harmony.melodyReturn(0, bRL, bRL);
			}
			else if (c >=1 ) {
				stop = true;
			}
		}
		else if (coin ==0){	
			bR = Harmony.wholeBeetsReturn(.5, floor(random(1,8)));
			bRL = bR.length;
			nR = Harmony.melodyReturn(0, bRL, bRL);
		}
	}
		//if sunny

		//if cloudy

		//if rainy
	
	else if (synthKind == 'bass') {
	//	newM = function() {
		if (day) {
			//console.log('bass line' + syns[m][1] + syns[m][0]);
			
			if (cloudy) {
				nR = Harmony.notesReturn(0, 1, 8);
  				bR = Harmony.beetsReturn(4, floor(random(2,4)));
			}
			else if (rainy) {
				nR = Harmony.notesReturn(floor(random(2,4)), 2);
  				bR = Harmony.beetsReturn(2, floor(random(1,3)));
			}
			else if (!rainy && !cloudy) {
				bR = Harmony.wholeBeetsReturn(4, floor(random(1,3)));
				nR = Harmony.notesReturn(floor(random(2,4)), floor(random(1,3)))
				//syns[m][0].note.seq(nR, bR);
			}
		}
		else if (!day) {
			
			if (cloudy) {
				nR = Harmony.notesReturn(0, 1, 8);
  				bR = Harmony.beetsReturn(4, floor(random(2,4)));
			}
			else if (rainy) {
				nR = Harmony.notesReturn(floor(random(2,4)), 2);
  				bR = Harmony.beetsReturn(2, floor(random(1,3)));
			}
			else if (!rainy && !cloudy) {
				bR = Harmony.wholeBeetsReturn(4, floor(random(1,3)));
				nR = Harmony.notesReturn(floor(random(2,4)), floor(random(1,3)))
				//syns[m][0].note.seq(nR, bR);
			}
		}
	}
	else if (synthKind == 'pad') {
		if (day) {
			chord = true;
			if (cloudy) {
				
				bR = Harmony.beetsReturn(4, floor(random(1,3)));
					nR = Harmony.chordsReturn(floor(random(2,4)), floor(random(1,3)))
			}
			else if (rainy) {
				bR = Harmony.beetsReturn(4, floor(random(1,3)));
					nR = Harmony.chordsReturn(floor(random(2,4)), floor(random(1,3)))
			}
			else if (!rainy && !cloudy) {
				
				bR = Harmony.beetsReturn(1, floor(random(1,8)));
			nR = Harmony.chordsReturn(4, floor(random(2,4)));
			}
		}
		else if (!day) {
			chord = false;
			if (cloudy) {
				bR = Harmony.wholeBeetsReturn(.5, floor(random(1,8)));
			nR = Harmony.melodyReturn(0, bR.length, bR.length);
			}
			else if (rainy){
				bR = Harmony.wholeBeetsReturn(.5, floor(random(1,8)));
			nR = Harmony.melodyReturn(0, bR.length, bR.length);
			}
			else if (!rainy && !cloudy) {
				bR = Harmony.wholeBeetsReturn(.5, floor(random(1,8)));
			nR = Harmony.melodyReturn(0, bR.length, bR.length);
			}
		}
	}

		//oif kind lead

	if (stop){
		synth.note.seq.stop();
	}
	else if (ignore) {
		console.log("ignore")	
	}
	else if (chord){
		console.log("chords chosen" + nR + " . " + bR);
		synth.chord.seq(nR, bR);
	}
	else if (!stop && !ignore && !chord) {
		synth.note.seq(nR, bR)
	}
	//array now
	//count is the i position, setting the point in the top array
	//bottom array includes everything else, 0 will always be synth
	//1 will aways be nR array, 2 will always be bR array
	var combo = [];
	combo[0] = nR;
	combo[1] = bR;
	var currentSeqsToPush = [];
	currentSeqsToPush[0] = p;
	currentSeqsToPush[1] = combo;
	currentSeqs[p] = currentSeqsToPush;
	//console.log(c + "c" + p + " name " + nR + "nr" + bR + "br")
	//noteLog[c].push([synth.name, nR, bR])
	//console.log(noteLog[c][p][0] + " notelog c p 0 ")

}

function isItemInArray(array, item) {
    for (var i = 0; i < array.length; i++) {
        // This if statement depends on the format of your array
        if (array[i][0] == item[0] && array[i][1] == item[1]) {
            return true;   // Found it
        }
    }
    return false;   // Not found
}

function EffectsUpdater (place) {
	var clear = false, coin = CoinReturn(), theBus = busses[place], anotherCoin = CoinReturn(),
	boop =	floor(random(theBus.fx.length));
	//	if (anotherCoin == 1) {
			var effector = theBus.fx[boop];
			if (effector){
				var index, n = effector.name, fxPL=effectsProperties.length;
				//get the place of the effector.name in the presets/properties array
				for (var i = 0; i < fxPL; i++) {
					if (effectsProperties[i][0] == n) {
				    	index = i;
				    	break;
				  	}	
				}
				// get random number length of the effects properties of this particular effect
				var g = floor(random(1,effectsProperties[index].length)),
				// it is the property to change
				low = effectsProperties[index][g][1], high = effectsProperties[index][g][2];
				it = effectsProperties[index][g][0];
				// if this only has two entries (min, max ((plus its name at [0]))
				if (effectsProperties[index][g].length <= 3){
					q = random(low, high) ;
				}
				//if it has more than two, it's probably specific/time based so choose a specific entry
				else if (effectsProperties[index][g].length >= 4) {
					q = effectsProperties[index][g][4];
				//	q = random(effectsProperties[index][g][1],effectsProperties[index][g][2]) ;

				}
				effector.it =q;
				fols[place] = Follow(busses[place]);
			}
			else if (!effector) {
				console.log ("no effector     " + boop)
			}
			//change effects
	//	}
	//	else {
			//clear effects
	//	}
	// }
	// else {
		//modify existing effects
	// }
}

Harmony = (function () {

  	var notesReturn = function (oct, lowRange, highRange) {
  		var scoreNotes = [];
    	for (var i = 0; i < floor(random(lowRange,highRange)); i++) {
      		scoreNotes[i] = ranNotes[floor(random(0,ranNotes.length))] + oct;
      	//	console.log(scoreNotes[i] + "basic notes return")
    	}

    	return scoreNotes;
    	    	//console.log(scoreNotes);
    // public
  	};

  	var melodyReturn = function (oct, lowRange, highRange) {
  		var scoreNotes = [], lastNumber;
    	for (var i = 0; i < floor(random(lowRange,highRange)); i++) {
    		lastPos = 0;
    		var coin = Math.round(Math.random()*2);
    		if (coin == 1) {
    			var uOrD = [-1,0,1];
    			if (ranNotes[lastPos + uOrD]){
    				scoreNotes[i] = ranNotes[lastPos + uOrD];
    			}
    			else {
    				scoreNotes[i] = ranNotes[floor(random(ranNotes.length))] + oct;
    			}
    			lastPos = i;
    		}
    		else {
      			scoreNotes[i] = ranNotes[floor(random(0,ranNotes.length))] + oct;
      			lastPos = i;
      		}
    	}
    	return scoreNotes;
   };

  	var beetsReturn = function (mul, len) {
  		var scoreBeets = [];
    	for (var i = 0; i < len; i++) {
      		scoreBeets[i] = beets[floor(random(1,beets.length))] * mul;
    	}
    	return scoreBeets;
  	};

  	var bassLineReturn = function() {
  		var scoreNotes = [],note, bassLineMeasures = [2, 4, 8], bunchOfNotes = [2,4,8,16],
  		bLM = bassLineMeasures[floor(random(bassLineMeasures.length))], 
  		bunchNote = bunchOfNotes[floor(random(bunchOfNotes.length))];
  		//create bass lines that work in cycles of 2, 4, 8, 16, 32
		// for loop inside of for loop

		for (var i = 0; i < bLM; i++){
			note = ranNotes[floor(random(ranNotes.length))];
			for (var j = 0; j < bunchNote; j++ ) {
				scoreNotes.push(note);
				//console.log(i + j + ' n o t e . . ' + note)
		  	}
  		}
  		return scoreNotes;
  	};

  	var rewriteMelodyReturn = function (p) {
  		
		var inNotes = [], coin = Math.round(Math.random()*2),
		y = floor(p.length/2) ;
		//console.log (p.length + " nR length " + (y * coin) + " y + coin ");
		inNotes = p.slice(0);
		for (i = (y * coin); i <(y*coin)+y; i++){
				inNotes[i] = ranNotes[floor(random(ranNotes.length))];
				//console.log (inNotes[i] + "in score for" + i);
			}
		return inNotes;
				  						
  	};

  	var wholeBeetsReturn = function (mul, len) {
		var scoreBeets = [], sum;
		
	  	for (var i = 0; i < len; i ++){
	  		//grab some beets
	  		scoreBeets.push(beets[floor(random(1, beets.length))]);	
	  	}
		//add contents of beets array
	  	sum = scoreBeets.reduce(add, 0);
	  	//if the sum is an odd number
	  	if (sum %2 != 0) {
	  	//sumRound is difference between sum and a whole set of measures
	  		var sumRound;
	  	// if sum will not round to 1, is short phrase
	  		if (sum < .5){
	  			sumRound = .5 - sum;
	  			scoreBeets.push(sumRound);
	  		}
	  		else {
	  	// if odd and >= 1,
	  	//not just round but floor the amount to round up by by one for simplicity. 
				sumRound = Math.ceil(sum) - sum; 
	  			if (Math.abs(sum + sumRound) % 2 == 1 && (sum + sumRound) >= 3) {
	  				//if this new, larger sum to round plus sum 
	  				//gonna add up to an odd number like 3, 5, etc add one more to it
	  				sumRound = sumRound + 1;
	 				}
	  	//add the time to the array to make it a full even measure count
	  			scoreBeets.push(sumRound);
	  		}
	  	//	return scoreBeets;
	  	}
	  	return scoreBeets;
	};

	var supportBeetsReturn = function (mul, len) {
			var scoreBeets = [], sum;
		
	  	for (var i = 0; i < len; i ++){
	  		//grab some beets
	  		scoreBeets.push(beets[floor(random(0, (beets.length - 2) ))]);	
	  	}
		//add contents of beets array
	  	sum = scoreBeets.reduce(add, 0);
	  	//if the sum is an odd number
	  	if (sum %2 != 0) {
	  	//sumRound is difference between sum and a whole set of measures
	  		var sumRound;
	  	// if sum will not round to 1, is short phrase
	  		if (sum < .5){
	  			sumRound = .5 - sum;
	  			scoreBeets.push(sumRound);
	  		}
	  		else {
	  	// if odd and >= 1,
	  	//not just round but floor the amount to round up by by one for simplicity. 
				sumRound = Math.ceil(sum) - sum; 
	  			if (Math.abs(sum + sumRound) % 2 == 1 && (sum + sumRound) >= 3) {
	  				//if this new, larger sum to round plus sum 
	  				//gonna add up to an odd number like 3, 5, etc add one more to it
	  				sumRound = sumRound + 1;
	 				}
	  	//add the time to the array to make it a full even measure count
	  			scoreBeets.push(sumRound);
	  		}
	  	//	return scoreBeets;
	  	}
	  	return scoreBeets;	
	};


// chordsreturn might need a type argument to specify behavior. it is product horrible frequencies with
// one of the synths right now
  	var chordsReturn = function (c, cLength) {
  		var chords = [], oct = [-12,-12,-12,0,0,0,12,12], 
  		ranLength = ranNotes.length, octLength = oct.length,
  		pedalPoint = ranNotes[floor(random(ranLength))];
		for (var i = 0; i < c; i++){
			var innerChord= [];
			if (i == 0){
				for (var j = 0; j < cLength; j++) {
					//first note is pedal point
					if (j==0){
						innerChord.push(pedalPoint)
					}
					else if (j >= 1){
						var n = ranNotes[floor(random(ranLength))];
						innerChord.push(n + oct[floor(random(octLength))]);
					}
				}
			}
			// create additional chords
			else if( i >= 1) {
				for (var j = 0; j < cLength; j++) {
					// first note is pedal point
					if (j==0){
						innerChord.push(pedalPoint)
					}
					else if (j >= 1) {
						var n = ranNotes[floor(random(ranLength))];
						//if this note is the same as the note in the same spot of the last chord
						if (n == chords[(i - 1)][j]) {
							//o is new note
							var o = n - 1;
							//if new note o is in key
							if (ranNotes.indexOf(o) >= 0){
								innerChord.push(o + oct[floor(random(octLength))]);
							}
							//else if new note o is not in key, move it down one more step
							else if (ranNotes.indexOf(o) == -1){
								o = o -1;
								innerChord.push(o);
							}
						}

						else if (n != chords[(i-1)] [j]) {
							innerChord.push(n + oct[floor(random(octLength))]);
						}
					}
				}
			}
			chords.push(innerChord);
			console.log(innerChord + "innerchord")
		}
		return chords;

  	}
  
  	return {
    	notesReturn: notesReturn,
    	bassLineReturn: bassLineReturn,
    	melodyReturn: melodyReturn,
    	rewriteMelodyReturn: rewriteMelodyReturn,
    	beetsReturn: beetsReturn,
    	supportBeetsReturn: supportBeetsReturn,
    	wholeBeetsReturn: wholeBeetsReturn,
    	chordsReturn: chordsReturn
  	};

})();

function listAllProperties(o){     
	var objectToInspect;     
	var result = [];
	
	for(objectToInspect = o; objectToInspect !== null; objectToInspect = Object.getPrototypeOf(objectToInspect)){  
		result = result.concat(Object.getOwnPropertyNames(objectToInspect));  
	}
	
	return result; 
}



